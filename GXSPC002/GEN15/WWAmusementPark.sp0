spec_i([ web,21,'Amusement Parks','WWAmusementPark',0,eng,'17_0_8-158023' ]).
 
struct_i(2,1,[ 'Pgmname','Update','Delete','Advanced_label_template' ],[]).
 
level_i(2,[ 2,[ [ 2,many ],[ 3,one ],[ 6,one ] ],[],[],[ [ [ 2,3,6 ],[ 12,20,13,11,40000,10,9,8,7,19 ] ] ],[ [ [ 2,3,6 ],[] ] ],[ 7 ],'IAMUSEMENTPARK',[],[] ]).
 
tw_i(2,[ [ 3,[ [ 2,12,12 ] ] ],[ 6,[ [ 2,12,12 ],[ 2,19,19 ] ] ] ]).
 
lwi_i(2,[ [] ]).
 
cond_constraint_i(2,[ [ t(8,2),t('.LIKE.',10),t('Amusementparkname',23) ],[ 8 ],[ t('.NOT.',8),t('null(',1),t('Amusementparkname',23),t(')',4) ],[] ]).
 
cond_order_i(2,[ 8 ],[ t('Orderedby',23),t(=,10),t('1',3) ]).
cond_order_i(2,[ 13 ],[ t('Orderedby',23),t(=,10),t('2',3) ]).
cond_order_i(2,[ 7 ],[]).
 
level_option_i(2,server_paging,[ y,[] ]).
 
ta_i(2,[ [ [ 2,19 ],[ 2,12 ],[ 6,20 ],[ 3,13 ],[ 2,11 ],[ 2,40000 ],[ 2,10 ],[ 2,9 ],[ 2,8 ],[ 2,7 ] ] ]).
 
las_i(2,[ [ 'Amusementparkname','Update','Delete',12,20,13,11,40000,10,9,8,7,19 ] ]).
 
lac_i(2,[ [ 'Amusementparkname','Update','Delete' ] ]).
 
 
lits_i('Amusement Parks',5,10).
lits_i('Ordered By',5,10).
lits_i('Park Name',5,10).
lits_i('Country Name',5,10).
 
cls_i([ 0,0 ],[ 5,2279 ]).
 
pos_i('Amusementparkname',[ 0,0,0 ]).
pos_i(7,[ 1,2,0 ]).
pos_i(8,[ 1,2,5 ]).
pos_i(9,[ 1,2,26 ]).
pos_i(10,[ 1,2,87 ]).
pos_i(11,[ 1,2,1112 ]).
pos_i(13,[ 1,2,2137 ]).
pos_i(20,[ 1,2,2188 ]).
pos_i('Update',[ 1,2,2239 ]).
pos_i('Delete',[ 1,2,2260 ]).
 
repeat_i(2,[ 1,2,[ 7,8,9,10,11,13,20,'Update','Delete' ],[ 'Update','Delete' ] ]).
 
default_i(e('Pgmname',2,2,'"WWAmusementPark"')).
 
rule_i(0,datastore(1,'DS_LAST_CHANGE','')).
rule_i(0,datastore(1,'LOCK_RETRY','10')).
rule_i(0,datastore(1,'WAIT_RECORD','0')).
rule_i(0,datastore(1,'ISOLATION_LEVEL','CR')).
rule_i(0,datastore(1,'SQLSERVER_VERSION','10')).
rule_i(0,datastore(1,'COMMENT_ON','No')).
rule_i(0,datastore(1,'DFT_TMP_TBLSPACE','')).
rule_i(0,datastore(1,'DFT_IDX_TBLSPACE','')).
rule_i(0,datastore(1,'DFT_TBL_TBLSPACE','')).
rule_i(0,datastore(1,'DCL_REF_INT_DB','Yes')).
rule_i(0,datastore(1,'PRIMARY_KEY_TYPE','PK')).
rule_i(0,datastore(1,'CS_SCHEMA','')).
rule_i(0,datastore(1,'SORT_ATTRIBUTES','Yes')).
rule_i(0,datastore(1,'JRN400','QSQJRN')).
rule_i(0,datastore(1,'CREATE_SAVF','Yes')).
rule_i(0,datastore(1,'PGMLIB','')).
rule_i(0,datastore(1,'DTALIB','')).
rule_i(0,datastore(1,'RecycleRWMin','30')).
rule_i(0,datastore(1,'RecycleRWType','1')).
rule_i(0,datastore(1,'RecycleRW','-1')).
rule_i(0,datastore(1,'POOL_STARTUP','No')).
rule_i(0,datastore(1,'POOLSIZE_RW','10')).
rule_i(0,datastore(1,'UnlimitedRWPool','-1')).
rule_i(0,datastore(1,'PoolRWEnabled','-1')).
rule_i(0,datastore(1,'CS_RPCPGML','')).
rule_i(0,datastore(1,'JDBC_DATASOURCE','')).
rule_i(0,datastore(1,'USE_JDBC_DATASOURCE','0')).
rule_i(0,datastore(1,'DS_DBMS_ADDINFO','Timeout=120')).
rule_i(0,datastore(1,'USER_PASSWORD','uRuaVgê5â%\zLÌBQQ\d')).
rule_i(0,datastore(1,'USER_ID',uRuaVgE5RzTDQUjX)).
rule_i(0,datastore(1,'TRUSTED_CONNECTION','No')).
rule_i(0,datastore(1,'CS_CONNECT','First')).
rule_i(0,datastore(1,'DBMS_PORT','')).
rule_i(0,datastore(1,'CS_SERVER','trialapps3.genexus.com')).
rule_i(0,datastore(1,'CS_DBNAME','Id7f9f0d46242d0f8b16dd44b6a24b589b')).
rule_i(0,datastore(1,'CS_FLEDSNAME','')).
rule_i(0,datastore(1,'CS_DRVNAME','sql server')).
rule_i(0,datastore(1,'CS_DSNAME','')).
rule_i(0,datastore(1,'DB_URL','')).
rule_i(0,datastore(1,'JDBC_CUSTOM_URL','0')).
rule_i(0,datastore(1,'JDBC_CUSTOM_DRIVER','')).
rule_i(0,datastore(1,'JDBC_DRIVER','net.sourceforge.jtds.jdbc.Driver')).
rule_i(0,datastore(1,'CONNECT_METHOD','OPSYS')).
rule_i(0,datastore(1,'ACCESS_TECHNO','ADONET')).
rule_i(0,datastore(1,'MAIN_DS','-1')).
rule_i(0,datastore(1,'REORG_GEN','8')).
rule_i(0,datastore(1,'HelpKeyword','20')).
rule_i(0,datastore(1,'DBMS',12)).
rule_i(0,datastore(1,'NAME','Default')).
rule_i(0,prop(idNULLS_BEHAVIOR,idNB_Current)).
rule_i(0,prop('PWFCallable','0')).
rule_i(0,prop('ObjectVisibility','Public')).
rule_i(0,prop('FullyQualifiedName','WWAmusementPark')).
rule_i(0,prop('GenerateObject','-1')).
rule_i(0,prop('Hint_firstrows','UMPV')).
rule_i(0,prop('JOIN_TYPE','UMPV')).
rule_i(0,prop('DBMS_JOINS','UMPV')).
rule_i(0,prop('REFRESH_TOUT_TRIG','ALL')).
rule_i(0,prop('REFRESH_TOUT','')).
rule_i(0,prop('KEY_ENTER','UMPV')).
rule_i(0,prop('KEY_CANCEL','UMPV')).
rule_i(0,prop('KEY_REFRESH','UMPV')).
rule_i(0,prop('KEY_HELP','UMPV')).
rule_i(0,prop('ASSIGNED_FNC_KEYS','UMPV')).
rule_i(0,prop('WEB_SECURITY_LEVEL','High')).
rule_i(0,prop('HTTP_PROTOCOL','Secure')).
rule_i(0,prop('USE_ENCRYPTION','NO')).
rule_i(0,prop('FIRST_WD_DATEPICKER','UMPV')).
rule_i(0,prop('WNUM_DATEPICKER','UMPV')).
rule_i(0,prop(idUSE_WEB_DATEPICKER,'UMPV')).
rule_i(0,prop('WebUX','SMOOTH')).
rule_i(0,prop('STD_FUNC_OBJECT','Yes')).
rule_i(0,prop('SPC_WARNINGS_DISABLED','spc0096 spc0107 spc0142')).
rule_i(0,prop('WebApplication',idDefault)).
rule_i(0,prop('COMPRESS_HTML','UMPV')).
rule_i(0,prop('AUTO_REFRESH','VARS_CHANGE')).
rule_i(0,prop('CACHE_EXPIRES','')).
rule_i(0,prop('WEB_AUTO_FOCUS','UMPV')).
rule_i(0,prop('OnSessionTimeout','Ignore')).
rule_i(0,prop('OBJECT_METADATA','')).
rule_i(0,prop('IsMain','0')).
rule_i(0,prop(sessiontype,'RW')).
rule_i(0,prop('SHOWMASTERPAGE_POPUP','0')).
rule_i(0,prop('MasterPage',o(13,'RwdMasterPage'))).
rule_i(0,prop('WEB_COMP','No')).
rule_i(0,prop('Theme',o(25,'Carmine'))).
rule_i(0,prop('ObjDesc','Amusement Parks')).
rule_i(0,prop('ObjName','WWAmusementPark')).
rule_i(0,maingen(15)).
rule_i(0,rule([ a(22,[ '''Toggle''','''Toggle''','' ]) ],[],[],[])).
rule_i(0,rule([ a(22,[ '''DoInsert''','''DoInsert''','' ]) ],[],[],[])).
 
a_i(1,1,f,'Pgmname',[],[ [],[ t('"WWAmusementPark"',3) ] ]).
a_i(2,1,f,'Err',[],[ [],[ t('0',3) ] ]).
a_i(3,2,t,2,[],[ [],'IAMUSEMENTPARK',[] ]).
a_i(4,2,r,3,[],[ [ [ 2,12,12 ] ],'ICOUNTRY',[] ]).
a_i(5,2,r,6,[],[ [ [ 2,12,12 ],[ 2,19,19 ] ],'ICOUNTRYCITY',[] ]).
a_i(6,1,f,[ t('&Update',23),t('Enabled',3) ],[],[ [],[ t(0,3),t(';',18) ] ]).
a_i(7,1,f,[ t('&Delete',23),t('Enabled',3) ],[],[ [],[ t(0,3),t(';',18) ] ]).
 
v_i(f,i,1,[]).
v_i(f,o,1,'Pgmname').
v_i(f,i,2,[]).
v_i(f,o,2,'Err').
v_i(t,i,3,[]).
v_i(t,o,3,19).
v_i(t,o,3,12).
v_i(t,o,3,11).
v_i(t,o,3,40000).
v_i(t,o,3,10).
v_i(t,o,3,9).
v_i(t,o,3,8).
v_i(t,o,3,7).
v_i(r,i,4,12).
v_i(r,o,4,13).
v_i(r,i,5,12).
v_i(r,i,5,19).
v_i(r,o,5,20).
v_i(f,i,6,[]).
v_i(f,o,6,[ t('&Update',23),t('Enabled',3) ]).
v_i(f,i,7,[]).
v_i(f,o,7,[ t('&Delete',23),t('Enabled',3) ]).
 
 
 
 
 
 
attri_i(19,[ 'CityId',int,4,0,'ZZZ9',0,'City Id','',0 ]).
attri_i(40000,[ 'AmusementParkPhoto_GXI',svchar,2048,0,'',0,'',[],0 ]).
attri_i(12,[ 'CountryId',int,4,0,'ZZZ9',0,'Country Id','',0 ]).
attri_i(20,[ 'CityName',char,50,0,'',0,'City Name','',0 ]).
attri_i(13,[ 'CountryName',char,50,0,'',0,'Country Name','',0 ]).
attri_i(11,[ 'AmusementParkPhoto',bits,4,0,'',0,'Amusement Park Photo','',0 ]).
attri_i(10,[ 'AmusementParkAddress',svchar,1024,0,'',0,'Amusement Park Address','',0 ]).
attri_i(9,[ 'AmusementParkWebsite',char,60,0,'',0,'Amusement Park Website','',0 ]).
attri_i(8,[ 'AmusementParkName',char,20,0,'',0,'Amusement Park Name','',0 ]).
attri_i(7,[ 'AmusementParkId',int,4,0,'ZZZ9',0,'Amusement Park Id','',0 ]).
attri_i('Pgmname',[ 'Pgmname',char,129,0,'',1,'Program name','',18 ]).
attri_i('Errmsg',[ 'Gx_emsg',char,70,0,'',1,'Error text','',17 ]).
attri_i('Err',[ 'Gx_err',int,3,0,'ZZ9',1,'Error code','',16 ]).
attri_i('Advanced_label_template',[ 'ADVANCED_LABEL_TEMPLATE',char,20,0,'',0,'ADVANCED_LABEL_TEMPLATE','',14 ]).
attri_i('Delete',[ 'Delete',char,20,0,'',0,'Delete','',13 ]).
attri_i('Update',[ 'Update',char,20,0,'',0,'Update','',12 ]).
attri_i('Amusementparkname',[ 'AmusementParkName',char,20,0,'',0,'Amusement Park Name','',11 ]).
attri_i('Orderedby',[ 'OrderedBy',int,4,0,'ZZZ9',0,'Ordered By','',15 ]).
attri_i('Trncontextatt',[ 'TrnContextAtt',o('TransactionContext.Attribute'),0,0,'',0,'Trn Context Att','',10 ]).
attri_i('Trncontext',[ 'TrnContext',o('TransactionContext'),0,0,'',0,'Trn Context','',9 ]).
attri_i('Gridstate',[ 'GridState',o('GeneXus\Common\GridState'),0,0,'',0,'Grid State','',8 ]).
attri_i('Httprequest',[ 'HTTPRequest',o(httprequest),4,0,'',0,'HTTPRequest','',7 ]).
attri_i('Session',[ 'Session',o(websession),4,0,'',0,'Session','',6 ]).
attri_i('Isauthorized',[ 'IsAuthorized',boolean,4,0,'',0,'Is Authorized','',5 ]).
 
table_i(3,[ 'Country',[ 12,13 ],'Country','Country' ]).
table_i(6,[ 'CountryCity',[ 12,19,20 ],'City','CountryCity' ]).
table_i(2,[ 'AmusementPark',[ 7,8,9,10,11,40000,12,19 ],'Amusement Park','AmusementPark' ]).
 
index_i(2,[ 'IAMUSEMENTPARK',u,[ 7 ],'IAmusementPark' ]).
index_i(2,[ 'IAMUSEMENTPARK2',k,[ 8 ],'IAmusementPark2' ]).
index_i(3,[ 'ICOUNTRY',u,[ 12 ],'ICountry' ]).
index_i(6,[ 'ICOUNTRYCITY',u,[ 12,19 ],'ICountryCity' ]).
 
 
 
 
 
 
 
 
 
 
 
 
add_att_i(bits,2,40000,11,'AmusementParkPhoto_GXI',[ svchar,2048,0,0 ]).
 
 
 
 
 
 
 
 
 
 
enum_value_i(2,41,'"INS"','Insert','"Insert"',[ none ]).
enum_value_i(2,41,'"UPD"','Update','"Update"',[ none ]).
enum_value_i(2,41,'"DLT"','Delete','"Delete"',[ none ]).
enum_value_i(2,41,'"DSP"','Display','"Display"',[ none ]).
 
enum_value_info_i(2,41,'GeneXus\TrnMode').
 
enum_type_i(2,41,char,3,0).
 
dom_info_i(42,[ 'GeneXus\Address' ]).
dom_info_i(85,[ 'Name' ]).
 
 
break_i(2,nvg,1,[],[ [ 7,8,9,10,11,13,20,12 ],[],[] ]).
 
b_group_i(2,1,lit,0,1,1).
b_group_i(2,2,lit,0,2,17).
b_group_i(2,3,lit,0,18,32).
b_group_i(2,4,lit,0,33,40).
b_group_i(2,5,lit,0,41,47).
b_group_i(2,6,lit,0,48,54).
b_group_i(2,7,lit,0,55,65).
b_group_i(2,8,lit,0,66,72).
b_group_i(2,9,lit,0,73,76).
b_group_i(2,10,lit,0,77,0).
 
b_line_i(1,2,1,cmd,1,[ t('',146,1,0),t('Start',3,1,7) ]).
b_line_i(2,2,2,cmd,1,[ t('',109,2,0),t('.NOT.',8,1,5),t('udp(',1,2,23),t(o(1,'IsAuthorized'),28,2,11),t(',',7,1,0),t('Pgmname',23,1,24),t(')',4,1,0) ]).
b_line_i(3,2,2,cmd,1,[ t('',104,3,0),t(o(13,'NotAuthorized'),28,1,3),t('Pgmname',23,1,17) ]).
b_line_i(4,2,2,cmd,1,[ t('',111,4,0) ]).
b_line_i(6,2,2,cmd,1,[ t('',107,6,0),t([ t('Grid',3,1,0),t('Rows',3,1,0) ],29,1,0),t(=,10,1,0),t('10',3,1,0) ]).
b_line_i(7,2,2,cmd,1,[ t('',107,7,0),t('Update',23,1,0),t(=,10,1,0),t('"Update"',3,1,0) ]).
b_line_i(8,2,2,cmd,1,[ t('',107,8,0),t('Delete',23,1,0),t(=,10,1,0),t('"Delete"',3,1,0) ]).
b_line_i(9,2,2,cmd,1,[ t('',107,9,0),t('Orderedby',23,1,0),t(=,10,1,0),t('1',3,1,0) ]).
b_line_i(10,2,2,cmd,1,[ t('',107,10,0),t([ t('Form',3,1,0),t('Caption',3,1,0) ],29,1,0),t(=,10,1,0),t('''Amusement Parks''',3,1,0) ]).
b_line_i(11,2,2,cmd,1,[ t('',107,11,0),t('Advanced_label_template',23,1,0),t(=,10,1,0),t('"%1 <strong>%2</strong>"',3,1,0) ]).
b_line_i(13,2,2,cmd,1,[ t('',145,13,0),t('''PREPARETRANSACTION''',3,13,5) ]).
b_line_i(14,2,2,cmd,1,[ t('',107,14,0),t([ t('Grid',3,14,2),t('loadsessionstate(',1,14,7) ],31,14,7),t(')',4,1,25) ]).
b_line_i(15,2,2,cmd,1,[ t('',147,15,0) ]).
b_line_i(17,2,2,cmd,1,[ t('',146,17,0),t('''Toggle''',3,17,7) ]).
b_line_i(18,2,3,cmd,1,[ t('',109,18,0),t([ t('Filterscontainer',3,18,5),t('Class',3,18,22) ],29,18,22),t(=,10,1,28),t('"AdvancedContainer"',3,18,77) ]).
b_line_i(19,2,3,cmd,1,[ t('',107,19,0),t([ t('Filterscontainer',3,1,0),t('Class',3,1,0) ],29,1,0),t(=,10,1,0),t('"AdvancedContainer"',3,1,0),t(+,5,1,0),t('" "',3,1,0),t(+,5,1,0),t('"AdvancedContainerVisible"',3,1,0) ]).
b_line_i(20,2,3,cmd,1,[ t('',107,20,0),t([ t('Gridcell',3,1,0),t('Class',3,1,0) ],29,1,0),t(=,10,1,0),t('"WWGridCell"',3,1,0) ]).
b_line_i(21,2,3,cmd,1,[ t('',107,21,0),t([ t('Btntoggle',3,1,0),t('Class',3,1,0) ],29,1,0),t(=,10,1,0),t('"HideFiltersButton"',3,1,0) ]).
b_line_i(22,2,3,cmd,1,[ t('',107,22,0),t([ t('Btntoggle',3,1,0),t('Caption',3,1,0) ],29,1,0),t(=,10,1,0),t('"Hide Filters"',3,1,0) ]).
b_line_i(23,2,3,cmd,1,[ t('',107,23,0),t([ t('Btntoggle',3,1,0),t('Tooltiptext',3,1,0) ],29,1,0),t(=,10,1,0),t('"Hide Filters"',3,1,0) ]).
b_line_i(24,2,3,cmd,1,[ t('',110,24,0) ]).
b_line_i(25,2,3,cmd,1,[ t('',107,25,0),t([ t('Filterscontainer',3,1,0),t('Class',3,1,0) ],29,1,0),t(=,10,1,0),t('"AdvancedContainer"',3,1,0) ]).
b_line_i(26,2,3,cmd,1,[ t('',107,26,0),t([ t('Gridcell',3,1,0),t('Class',3,1,0) ],29,1,0),t(=,10,1,0),t('"WWGridCellExpanded"',3,1,0) ]).
b_line_i(27,2,3,cmd,1,[ t('',107,27,0),t([ t('Btntoggle',3,1,0),t('Class',3,1,0) ],29,1,0),t(=,10,1,0),t('"ShowFiltersButton"',3,1,0) ]).
b_line_i(28,2,3,cmd,1,[ t('',107,28,0),t([ t('Btntoggle',3,1,0),t('Caption',3,1,0) ],29,1,0),t(=,10,1,0),t('"Show Filters"',3,1,0) ]).
b_line_i(29,2,3,cmd,1,[ t('',107,29,0),t([ t('Btntoggle',3,1,0),t('Tooltiptext',3,1,0) ],29,1,0),t(=,10,1,0),t('"Show Filters"',3,1,0) ]).
b_line_i(30,2,3,cmd,1,[ t('',111,30,0) ]).
b_line_i(31,2,3,cmd,1,[ t('',147,31,0) ]).
b_line_i(32,2,3,cmd,1,[ t('',146,32,0),t([ t('Lblorderby',3,32,7),t('Click',3,32,18) ],29,32,18) ]).
b_line_i(33,2,4,cmd,1,[ t('',109,33,0),t([ t('Orderbycontainer',3,33,5),t('Class',3,33,22) ],29,33,22),t(=,10,1,28),t('"AdvancedContainerItem"',3,33,77) ]).
b_line_i(34,2,4,cmd,1,[ t('',107,34,0),t([ t('Orderbycontainer',3,1,0),t('Class',3,1,0) ],29,1,0),t(=,10,1,0),t('"AdvancedContainerItem"',3,1,0),t(+,5,1,0),t('" "',3,1,0),t(+,5,1,0),t('"AdvancedContainerItemExpanded"',3,1,0) ]).
b_line_i(35,2,4,cmd,1,[ t('',110,35,0) ]).
b_line_i(36,2,4,cmd,1,[ t('',107,36,0),t([ t('Orderbycontainer',3,1,0),t('Class',3,1,0) ],29,1,0),t(=,10,1,0),t('"AdvancedContainerItem"',3,1,0) ]).
b_line_i(37,2,4,cmd,1,[ t('',111,37,0) ]).
b_line_i(38,2,4,cmd,1,[ t('',147,38,0) ]).
b_line_i(40,2,4,cmd,1,[ t('',146,40,0),t([ t('Orderby1',3,40,7),t('Click',3,40,16) ],29,40,16) ]).
b_line_i(41,2,5,cmd,1,[ t('',107,41,0),t('Orderedby',23,1,0),t(=,10,1,0),t('1',3,1,0) ]).
b_line_i(42,2,5,cmd,1,[ t('',107,42,0),t([ t('Orderby1',3,1,0),t('Class',3,1,0) ],29,1,0),t(=,10,1,0),t('"WWOrderItem"',3,1,0),t(+,5,1,0),t('" "',3,1,0),t(+,5,1,0),t('"WWOrderItemSelected"',3,1,0) ]).
b_line_i(43,2,5,cmd,1,[ t('',107,43,0),t([ t('Orderby2',3,1,0),t('Class',3,1,0) ],29,1,0),t(=,10,1,0),t('"WWOrderItem"',3,1,0) ]).
b_line_i(44,2,5,cmd,1,[ t('',107,44,0),t([ t('Grid',3,44,2),t('refresh(',1,44,7) ],31,44,7),t(')',4,1,16) ]).
b_line_i(45,2,5,cmd,1,[ t('',147,45,0) ]).
b_line_i(47,2,5,cmd,1,[ t('',146,47,0),t([ t('Orderby2',3,47,7),t('Click',3,47,16) ],29,47,16) ]).
b_line_i(48,2,6,cmd,1,[ t('',107,48,0),t('Orderedby',23,1,0),t(=,10,1,0),t('2',3,1,0) ]).
b_line_i(49,2,6,cmd,1,[ t('',107,49,0),t([ t('Orderby1',3,1,0),t('Class',3,1,0) ],29,1,0),t(=,10,1,0),t('"WWOrderItem"',3,1,0) ]).
b_line_i(50,2,6,cmd,1,[ t('',107,50,0),t([ t('Orderby2',3,1,0),t('Class',3,1,0) ],29,1,0),t(=,10,1,0),t('"WWOrderItem"',3,1,0),t(+,5,1,0),t('" "',3,1,0),t(+,5,1,0),t('"WWOrderItemSelected"',3,1,0) ]).
b_line_i(51,2,6,cmd,1,[ t('',107,51,0),t([ t('Grid',3,51,2),t('refresh(',1,51,7) ],31,51,7),t(')',4,1,16) ]).
b_line_i(52,2,6,cmd,1,[ t('',147,52,0) ]).
b_line_i(54,2,6,cmd,1,[ t('',146,54,0),t('Refresh',3,54,7) ]).
b_line_i(55,2,7,cmd,1,[ t('',107,55,0),t([ t('Grid',3,55,2),t('savesessionstate(',1,55,7) ],31,55,7),t(')',4,1,25) ]).
b_line_i(57,2,7,cmd,1,[ t('',152,57,0) ]).
b_line_i(58,2,7,cmd,1,[ t('',153,58,0),t('Orderedby',23,1,8),t(=,10,1,19),t('1',3,1,21) ]).
b_line_i(59,2,7,cmd,1,[ t('',107,59,0),t([ t('Lblorderby',3,1,0),t('Caption',3,1,0) ],29,1,0),t(=,10,1,0),t('format(',1,1,0),t('Advanced_label_template',23,1,0),t(',',7,1,0),t('"Ordered By"',3,1,0),t(',',7,1,0),t('"Park Name"',3,1,0),t(')',4,1,0) ]).
b_line_i(60,2,7,cmd,1,[ t('',153,60,0),t('Orderedby',23,1,8),t(=,10,1,19),t('2',3,1,21) ]).
b_line_i(61,2,7,cmd,1,[ t('',107,61,0),t([ t('Lblorderby',3,1,0),t('Caption',3,1,0) ],29,1,0),t(=,10,1,0),t('format(',1,1,0),t('Advanced_label_template',23,1,0),t(',',7,1,0),t('"Ordered By"',3,1,0),t(',',7,1,0),t('"Country Name"',3,1,0),t(')',4,1,0) ]).
b_line_i(62,2,7,cmd,1,[ t('',154,62,0) ]).
b_line_i(63,2,7,cmd,1,[ t('',147,63,0) ]).
b_line_i(65,2,7,cmd,1,[ t('',146,65,0),t([ t('Grid',3,65,7),t('Load',3,65,12) ],29,65,12) ]).
b_line_i(66,2,8,cmd,1,[ t('',107,66,0),t([ t('Update',23,1,0),t('Link',3,1,0) ],29,1,0),t(=,10,1,0),t('link(',1,1,0),t(o(0,'AmusementPark'),28,1,0),t(',',7,1,0),t([ 41,'Update' ],44,1,0),t(',',7,1,0),t(7,2,1,0),t(')',4,1,0) ]).
b_line_i(67,2,8,cmd,1,[ t('',107,67,0),t([ t('Delete',23,1,0),t('Link',3,1,0) ],29,1,0),t(=,10,1,0),t('link(',1,1,0),t(o(0,'AmusementPark'),28,1,0),t(',',7,1,0),t([ 41,'Delete' ],44,1,0),t(',',7,1,0),t(7,2,1,0),t(')',4,1,0) ]).
b_line_i(68,2,8,cmd,1,[ t('',107,68,0),t([ t(8,2,1,0),t('Link',3,1,0) ],29,1,0),t(=,10,1,0),t('link(',1,1,0),t(o(13,'ViewAmusementPark'),28,1,0),t(',',7,1,0),t(7,2,1,0),t(',',7,1,0),t('""',3,1,0),t(')',4,1,0) ]).
b_line_i(69,2,8,cmd,1,[ t('',107,69,0),t([ t(13,2,1,0),t('Link',3,1,0) ],29,1,0),t(=,10,1,0),t('link(',1,1,0),t(o(13,'ViewCountry'),28,1,0),t(',',7,1,0),t(12,2,1,0),t(',',7,1,0),t('""',3,1,0),t(')',4,1,0) ]).
b_line_i(70,2,8,cmd,1,[ t('',107,70,0),t([ t('Grid',3,0,0),t('load(',1,0,0) ],31,0,0),t(')',4,0,0) ]).
b_line_i(70,2,8,cmd,1,[ t('',147,70,0) ]).
b_line_i(72,2,8,cmd,1,[ t('',146,72,0),t('''DoInsert''',3,72,7) ]).
b_line_i(73,2,9,cmd,1,[ t('',104,73,0),t(o(0,'AmusementPark'),28,1,2),t([ 41,'Insert' ],44,73,16),t(',',7,1,0),t('nullvalue(',1,73,32),t(7,2,73,43),t(')',4,1,58) ]).
b_line_i(74,2,9,cmd,1,[ t('',147,74,0) ]).
b_line_i(76,2,9,cmd,1,[ t('',143,76,0),t('''PREPARETRANSACTION''',3,76,5) ]).
b_line_i(77,2,10,cmd,1,[ t('',107,77,0),t('Trncontext',23,1,0),t(=,10,1,0),t([ 'TransactionContext',[ t('(',0,77,19),t(')',4,77,20) ],n ],46,1,0) ]).
b_line_i(78,2,10,cmd,1,[ t('',107,78,0),t([ t('Trncontext',23,1,0),t('Callerobject',3,1,0) ],29,1,0),t(=,10,1,0),t('Pgmname',23,1,0) ]).
b_line_i(79,2,10,cmd,1,[ t('',107,79,0),t([ t('Trncontext',23,1,0),t('Callerondelete',3,1,0) ],29,1,0),t(=,10,1,0),t('TRUE',40,1,0) ]).
b_line_i(80,2,10,cmd,1,[ t('',107,80,0),t([ t('Trncontext',23,1,0),t('Callerurl',3,1,0) ],29,1,0),t(=,10,1,0),t([ t('Httprequest',23,1,0),t('Scriptname',3,1,0) ],29,1,0),t(+,5,1,0),t('"?"',3,1,0),t(+,5,1,0),t([ t('Httprequest',23,1,0),t('Querystring',3,1,0) ],29,1,0) ]).
b_line_i(81,2,10,cmd,1,[ t('',107,81,0),t([ t('Trncontext',23,1,0),t('Transactionname',3,1,0) ],29,1,0),t(=,10,1,0),t('"AmusementPark"',3,1,0) ]).
b_line_i(83,2,10,cmd,1,[ t('',107,83,0),t([ t('Session',23,83,2),t('set(',1,83,11) ],31,83,2),t('"TrnContext"',3,83,16),t(',',7,1,29),t([ t('Trncontext',23,1,31),t('toxml(',1,1,43) ],31,83,43),t(')',4,1,50),t(')',4,1,51) ]).
b_line_i(84,2,10,cmd,1,[ t('',144,84,0) ]).
 
sf_break_i(43,2).
 
 
 
 
 
 
 
 
 
 
 
 
 
html_i(2,div(2)).
 
html_sub_i(2,3,html_i(0,div(3))).
html_sub_i(3,4,html_i(0,div(4))).
html_sub_i(4,5,html_i(0,div(5))).
html_sub_i(5,6,html_i(0,div(6))).
html_sub_i(6,7,html_i(0,div(7))).
html_sub_i(7,8,html_i(0,div(8))).
html_sub_i(8,9,html_i(0,button('''Toggle'''))).
html_sub_i(7,10,html_i(1,div(10))).
html_sub_i(10,11,html_i(0,t('Amusement Parks',3))).
html_sub_i(7,12,html_i(2,div(12))).
html_sub_i(12,13,html_i(0,div(13))).
html_sub_i(13,14,html_i(0,div(14))).
html_sub_i(14,15,html_i(0,button('''DoInsert'''))).
html_sub_i(7,16,html_i(3,div(16))).
html_sub_i(16,17,html_i(0,div(17))).
html_sub_i(17,18,html_i(0,t('Amusementparkname',23))).
html_sub_i(3,19,html_i(1,div(19))).
html_sub_i(19,20,html_i(0,div(20))).
html_sub_i(20,21,html_i(0,div(21))).
html_sub_i(21,22,html_i(0,div(22))).
html_sub_i(22,23,html_i(0,div(23))).
html_sub_i(23,24,html_i(0,div(24))).
html_sub_i(24,25,html_i(0,div(25))).
html_sub_i(25,26,html_i(0,div(26))).
html_sub_i(26,27,html_i(0,t('Ordered By',3))).
html_sub_i(24,28,html_i(1,div(28))).
html_sub_i(28,29,html_i(0,div(29))).
html_sub_i(29,30,html_i(0,div(30))).
html_sub_i(30,31,html_i(0,div(31))).
html_sub_i(31,32,html_i(0,div(32))).
html_sub_i(32,33,html_i(0,t('Park Name',3))).
html_sub_i(31,34,html_i(1,div(34))).
html_sub_i(34,35,html_i(0,t('Country Name',3))).
html_sub_i(19,36,html_i(1,div(36))).
html_sub_i(36,37,html_i(0,div(37))).
html_sub_i(37,38,html_i(0,div(38))).
html_sub_i(38,39,html_i(0,div(39))).
html_sub_i(39,40,html_i(0,comp(errview))).
html_sub_i(37,41,html_i(1,div(41))).
html_sub_i(41,42,html_i(0,div(42))).
html_sub_i(42,43,html_i(0,s(43))).
 
html_tags_i(1,'Class','form-horizontal Form').
html_tags_i(2,'data-gx-base-lib',bootstrapv3).
html_tags_i(2,'data-abstract-form','').
html_tags_i(9,'ControlType','').
html_tags_i(11,'ControlType','').
html_tags_i(13,'data-gx-actiongroup-type',toolbar).
html_tags_i(15,'ControlType','').
html_tags_i(18,'data-gx-att','var:11').
html_tags_i(27,'ControlType','').
html_tags_i(33,'ControlType','').
html_tags_i(35,'ControlType','').
 
html_comp_i(40,'Backcolor',rgb(0,0,0),d,[ color ]).
html_comp_i(2,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(2,'Class','Section',d,[ str ]).
html_comp_i(2,'Id','',d,[ str ]).
html_comp_i(2,'Height',measure(0,px),d,[ measure ]).
html_comp_i(2,'Width',measure(0,px),d,[ measure ]).
html_comp_i(2,'Semanticcontent',div,d,[ str ]).
html_comp_i(2,'Align',left,d,[ str ]).
html_comp_i(2,'Valign',top,d,[ str ]).
html_comp_i(3,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(3,'Class','BodyContainer',v,[ str ]).
html_comp_i(3,'Id','Maintable',v,[ str ]).
html_comp_i(3,'Height',measure(0,px),d,[ measure ]).
html_comp_i(3,'Width',measure(0,px),d,[ measure ]).
html_comp_i(3,'Semanticcontent',div,d,[ str ]).
html_comp_i(3,'Align',left,d,[ str ]).
html_comp_i(3,'Valign',top,d,[ str ]).
html_comp_i(4,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(4,'Class',row,v,[ str ]).
html_comp_i(4,'Id','',d,[ str ]).
html_comp_i(4,'Height',measure(0,px),d,[ measure ]).
html_comp_i(4,'Width',measure(0,px),d,[ measure ]).
html_comp_i(4,'Semanticcontent',div,d,[ str ]).
html_comp_i(4,'Align',left,d,[ str ]).
html_comp_i(4,'Valign',top,d,[ str ]).
html_comp_i(5,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(5,'Class','col-xs-12',v,[ str ]).
html_comp_i(5,'Id','',d,[ str ]).
html_comp_i(5,'Height',measure(0,px),d,[ measure ]).
html_comp_i(5,'Width',measure(0,px),d,[ measure ]).
html_comp_i(5,'Semanticcontent',div,d,[ str ]).
html_comp_i(5,'Align',left,d,[ str ]).
html_comp_i(5,'Valign',top,d,[ str ]).
html_comp_i(6,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(6,'Class','TableTopSearch',v,[ str ]).
html_comp_i(6,'Id','Tabletop',v,[ str ]).
html_comp_i(6,'Height',measure(0,px),d,[ measure ]).
html_comp_i(6,'Width',measure(0,px),d,[ measure ]).
html_comp_i(6,'Semanticcontent',div,d,[ str ]).
html_comp_i(6,'Align',left,d,[ str ]).
html_comp_i(6,'Valign',top,d,[ str ]).
html_comp_i(7,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(7,'Class',row,v,[ str ]).
html_comp_i(7,'Id','',d,[ str ]).
html_comp_i(7,'Height',measure(0,px),d,[ measure ]).
html_comp_i(7,'Width',measure(0,px),d,[ measure ]).
html_comp_i(7,'Semanticcontent',div,d,[ str ]).
html_comp_i(7,'Align',left,d,[ str ]).
html_comp_i(7,'Valign',top,d,[ str ]).
html_comp_i(8,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(8,'Class','col-xs-2 ToggleCell',v,[ str ]).
html_comp_i(8,'Id','',d,[ str ]).
html_comp_i(8,'Height',measure(0,px),d,[ measure ]).
html_comp_i(8,'Width',measure(0,px),d,[ measure ]).
html_comp_i(8,'Semanticcontent',div,d,[ str ]).
html_comp_i(8,'Align',left,d,[ str ]).
html_comp_i(8,'Valign',top,d,[ str ]).
html_comp_i(9,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(9,'Controlname','Btntoggle',v,[ str ]).
html_comp_i(9,'Class','HideFiltersButton',v,[ str ]).
html_comp_i(9,'Event','''Toggle''',v,[ str ]).
html_comp_i(9,'Caption','Hide Filters',d,[ str ]).
html_comp_i(9,'Title','Hide Filters',d,[ str ]).
html_comp_i(9,'Font',font('Arial',9,[]),d,[ font ]).
html_comp_i(9,'Forecolor',rgb(0,0,0),d,[ color ]).
html_comp_i(9,'Backcolor',rgb(240,240,240),d,[ color ]).
html_comp_i(9,'Border','0',d,[ str ]).
html_comp_i(9,'Bordercolor',rgb(255,255,255),d,[ color ]).
html_comp_i(9,'Buttonborderstyle',standard,d,[ str ]).
html_comp_i(10,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(10,'Class','col-xs-6 col-sm-2',v,[ str ]).
html_comp_i(10,'Id','',d,[ str ]).
html_comp_i(10,'Height',measure(0,px),d,[ measure ]).
html_comp_i(10,'Width',measure(0,px),d,[ measure ]).
html_comp_i(10,'Semanticcontent',div,d,[ str ]).
html_comp_i(10,'Align',left,d,[ str ]).
html_comp_i(10,'Valign',top,d,[ str ]).
html_comp_i(11,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(11,'Caption','Amusement Parks',d,[ str ]).
html_comp_i(11,'Id','Titletext',v,[ str ]).
html_comp_i(11,'Class','SubTitle',v,[ str ]).
html_comp_i(11,'Event','',d,[ str ]).
html_comp_i(11,'Returnonclick',0,d,[ bool ]).
html_comp_i(11,'Gxformat',0,d,[ num ]).
html_comp_i(11,'Title','',d,[ str ]).
html_comp_i(11,'Fill',-1,d,[ bool ]).
html_comp_i(11,'Backcolor',rgb(255,255,255),d,[ color ]).
html_comp_i(11,'Forecolor',rgb(0,0,0),d,[ color ]).
html_comp_i(11,'Font',font('Arial',14,[]),d,[ font ]).
html_comp_i(12,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(12,'Class','col-xs-4 col-sm-5 col-sm-push-3 WWActionsCell',v,[ str ]).
html_comp_i(12,'Id','',d,[ str ]).
html_comp_i(12,'Height',measure(0,px),d,[ measure ]).
html_comp_i(12,'Width',measure(0,px),d,[ measure ]).
html_comp_i(12,'Semanticcontent',div,d,[ str ]).
html_comp_i(12,'Align','Right',v,[ str ]).
html_comp_i(12,'Valign',top,d,[ str ]).
html_comp_i(13,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(13,'Class','gx-action-group ActionGroup',v,[ str ]).
html_comp_i(13,'Id','',d,[ str ]).
html_comp_i(13,'Height',measure(0,px),d,[ measure ]).
html_comp_i(13,'Width',measure(0,px),d,[ measure ]).
html_comp_i(13,'Semanticcontent',div,d,[ str ]).
html_comp_i(13,'Align',left,d,[ str ]).
html_comp_i(13,'Valign',top,d,[ str ]).
html_comp_i(14,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(14,'Class','gx-button',v,[ str ]).
html_comp_i(14,'Id','',d,[ str ]).
html_comp_i(14,'Height',measure(0,px),d,[ measure ]).
html_comp_i(14,'Width',measure(0,px),d,[ measure ]).
html_comp_i(14,'Semanticcontent',div,d,[ str ]).
html_comp_i(14,'Align',left,d,[ str ]).
html_comp_i(14,'Valign',top,d,[ str ]).
html_comp_i(15,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(15,'Controlname','Btninsert',v,[ str ]).
html_comp_i(15,'Class','BtnAdd',v,[ str ]).
html_comp_i(15,'Event','''DoInsert''',v,[ str ]).
html_comp_i(15,'Caption','Insert',d,[ str ]).
html_comp_i(15,'Title','Insert',d,[ str ]).
html_comp_i(15,'Font',font('Arial',9,[]),d,[ font ]).
html_comp_i(15,'Forecolor',rgb(0,0,0),d,[ color ]).
html_comp_i(15,'Backcolor',rgb(240,240,240),d,[ color ]).
html_comp_i(15,'Border','0',d,[ str ]).
html_comp_i(15,'Bordercolor',rgb(255,255,255),d,[ color ]).
html_comp_i(15,'Buttonborderstyle',standard,d,[ str ]).
html_comp_i(16,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(16,'Class','col-xs-12 col-sm-3 col-sm-pull-5',v,[ str ]).
html_comp_i(16,'Id','',d,[ str ]).
html_comp_i(16,'Height',measure(0,px),d,[ measure ]).
html_comp_i(16,'Width',measure(0,px),d,[ measure ]).
html_comp_i(16,'Semanticcontent',div,d,[ str ]).
html_comp_i(16,'Align',left,d,[ str ]).
html_comp_i(16,'Valign',top,d,[ str ]).
html_comp_i(17,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(17,'Class',' gx-attribute',v,[ str ]).
html_comp_i(17,'Id','',d,[ str ]).
html_comp_i(17,'Height',measure(0,px),d,[ measure ]).
html_comp_i(17,'Width',measure(0,px),d,[ measure ]).
html_comp_i(17,'Semanticcontent',div,d,[ str ]).
html_comp_i(17,'Align',left,d,[ str ]).
html_comp_i(17,'Valign',top,d,[ str ]).
html_comp_i(18,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(18,'Colcount',20,d,[ num ]).
html_comp_i(18,'Attid',-11,v,[ num ]).
html_comp_i(18,'Class','FilterSearchAttribute',v,[ str ]).
html_comp_i(18,'Controlname','&Amusementparkname',d,[ str ]).
html_comp_i(18,'Returnonclick',0,v,[ bool ]).
html_comp_i(18,'Captionclass','col-sm-3 FilterSearchAttributeLabel',v,[ str ]).
html_comp_i(18,'Captionstyle','',v,[ str ]).
html_comp_i(18,'Captionposition','None',v,[ str ]).
html_comp_i(18,'Captionvalue','Amusement Park Name',d,[ str ]).
html_comp_i(18,'Layoutclass','',v,[ str ]).
html_comp_i(18,'Controltype',2,d,[ num ]).
html_comp_i(18,'Inputtype',0,d,[ num ]).
html_comp_i(18,'Editautocomplete',0,d,[ num ]).
html_comp_i(18,'Autocorrection',-1,d,[ bool ]).
html_comp_i(18,'Autocapitalization','FirstWord',d,[ str ]).
html_comp_i(18,'Notifycontextchange',0,d,[ bool ]).
html_comp_i(18,'Emptyasnull','Yes',d,[ str ]).
html_comp_i(18,'Readonly',0,v,[ bool ]).
html_comp_i(18,'Autocomplete',-1,d,[ bool ]).
html_comp_i(18,'Ispassword',0,d,[ bool ]).
html_comp_i(18,'Autoresize',-1,d,[ bool ]).
html_comp_i(18,'Gxwidth',measure(20,chr),d,[ measure ]).
html_comp_i(18,'Gxheight',measure(1,row),d,[ measure ]).
html_comp_i(18,'Ismultiline',0,d,[ bool ]).
html_comp_i(18,'Maxtextnumberlines',0,d,[ num ]).
html_comp_i(18,'Fill',-1,d,[ bool ]).
html_comp_i(18,'Backcolor',rgb(255,255,255),d,[ color ]).
html_comp_i(18,'Forecolor',rgb(0,0,0),d,[ color ]).
html_comp_i(18,'Font',font('Arial',10,[]),d,[ font ]).
html_comp_i(18,'Horizontalalignment',left,d,[ str ]).
html_comp_i(18,'Gxformat',0,d,[ num ]).
html_comp_i(18,'Title','',d,[ str ]).
html_comp_i(18,'Invitemsg','Park Name',v,[ str ]).
html_comp_i(19,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(19,'Class',row,v,[ str ]).
html_comp_i(19,'Id','',d,[ str ]).
html_comp_i(19,'Height',measure(0,px),d,[ measure ]).
html_comp_i(19,'Width',measure(0,px),d,[ measure ]).
html_comp_i(19,'Semanticcontent',div,d,[ str ]).
html_comp_i(19,'Align',left,d,[ str ]).
html_comp_i(19,'Valign',top,d,[ str ]).
html_comp_i(20,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(20,'Class','col-xs-12 col-sm-3 col-md-2 WWAdvancedBarCell',v,[ str ]).
html_comp_i(20,'Id','',d,[ str ]).
html_comp_i(20,'Height',measure(0,px),d,[ measure ]).
html_comp_i(20,'Width',measure(0,px),d,[ measure ]).
html_comp_i(20,'Semanticcontent',div,d,[ str ]).
html_comp_i(20,'Align',left,d,[ str ]).
html_comp_i(20,'Valign',top,d,[ str ]).
html_comp_i(21,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(21,'Class','AdvancedContainerVisible',v,[ str ]).
html_comp_i(21,'Id','Filterscontainer',v,[ str ]).
html_comp_i(21,'Height',measure(0,px),d,[ measure ]).
html_comp_i(21,'Width',measure(0,px),d,[ measure ]).
html_comp_i(21,'Semanticcontent',div,d,[ str ]).
html_comp_i(21,'Align',left,d,[ str ]).
html_comp_i(21,'Valign',top,d,[ str ]).
html_comp_i(22,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(22,'Class',row,v,[ str ]).
html_comp_i(22,'Id','',d,[ str ]).
html_comp_i(22,'Height',measure(0,px),d,[ measure ]).
html_comp_i(22,'Width',measure(0,px),d,[ measure ]).
html_comp_i(22,'Semanticcontent',div,d,[ str ]).
html_comp_i(22,'Align',left,d,[ str ]).
html_comp_i(22,'Valign',top,d,[ str ]).
html_comp_i(23,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(23,'Class','col-xs-12',v,[ str ]).
html_comp_i(23,'Id','',d,[ str ]).
html_comp_i(23,'Height',measure(0,px),d,[ measure ]).
html_comp_i(23,'Width',measure(0,px),d,[ measure ]).
html_comp_i(23,'Semanticcontent',div,d,[ str ]).
html_comp_i(23,'Align',left,d,[ str ]).
html_comp_i(23,'Valign',top,d,[ str ]).
html_comp_i(24,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(24,'Class','AdvancedContainerItem',v,[ str ]).
html_comp_i(24,'Id','Orderbycontainer',v,[ str ]).
html_comp_i(24,'Height',measure(0,px),d,[ measure ]).
html_comp_i(24,'Width',measure(0,px),d,[ measure ]).
html_comp_i(24,'Semanticcontent',div,d,[ str ]).
html_comp_i(24,'Align',left,d,[ str ]).
html_comp_i(24,'Valign',top,d,[ str ]).
html_comp_i(25,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(25,'Class',row,v,[ str ]).
html_comp_i(25,'Id','',d,[ str ]).
html_comp_i(25,'Height',measure(0,px),d,[ measure ]).
html_comp_i(25,'Width',measure(0,px),d,[ measure ]).
html_comp_i(25,'Semanticcontent',div,d,[ str ]).
html_comp_i(25,'Align',left,d,[ str ]).
html_comp_i(25,'Valign',top,d,[ str ]).
html_comp_i(26,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(26,'Class','col-xs-12',v,[ str ]).
html_comp_i(26,'Id','',d,[ str ]).
html_comp_i(26,'Height',measure(0,px),d,[ measure ]).
html_comp_i(26,'Width',measure(0,px),d,[ measure ]).
html_comp_i(26,'Semanticcontent',div,d,[ str ]).
html_comp_i(26,'Align',left,d,[ str ]).
html_comp_i(26,'Valign',top,d,[ str ]).
html_comp_i(27,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(27,'Caption','Ordered By',d,[ str ]).
html_comp_i(27,'Id','Lblorderby',v,[ str ]).
html_comp_i(27,'Class','WWAdvancedLabel WWOrderByLabel',v,[ str ]).
html_comp_i(27,'Event','',d,[ str ]).
html_comp_i(27,'Returnonclick',0,d,[ bool ]).
html_comp_i(27,'Gxformat',1,v,[ num ]).
html_comp_i(27,'Title','',d,[ str ]).
html_comp_i(27,'Fill',-1,d,[ bool ]).
html_comp_i(27,'Backcolor',rgb(255,255,255),d,[ color ]).
html_comp_i(27,'Forecolor',rgb(0,0,0),d,[ color ]).
html_comp_i(27,'Font','',d,[ str ]).
html_comp_i(28,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(28,'Class',row,v,[ str ]).
html_comp_i(28,'Id','',d,[ str ]).
html_comp_i(28,'Height',measure(0,px),d,[ measure ]).
html_comp_i(28,'Width',measure(0,px),d,[ measure ]).
html_comp_i(28,'Semanticcontent',div,d,[ str ]).
html_comp_i(28,'Align',left,d,[ str ]).
html_comp_i(28,'Valign',top,d,[ str ]).
html_comp_i(29,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(29,'Class','col-xs-12',v,[ str ]).
html_comp_i(29,'Id','',d,[ str ]).
html_comp_i(29,'Height',measure(0,px),d,[ measure ]).
html_comp_i(29,'Width',measure(0,px),d,[ measure ]).
html_comp_i(29,'Semanticcontent',div,d,[ str ]).
html_comp_i(29,'Align',left,d,[ str ]).
html_comp_i(29,'Valign',top,d,[ str ]).
html_comp_i(30,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(30,'Class','OrdersTable',v,[ str ]).
html_comp_i(30,'Id','Orderbycontainer2',v,[ str ]).
html_comp_i(30,'Height',measure(0,px),d,[ measure ]).
html_comp_i(30,'Width',measure(0,px),d,[ measure ]).
html_comp_i(30,'Semanticcontent',div,d,[ str ]).
html_comp_i(30,'Align',left,d,[ str ]).
html_comp_i(30,'Valign',top,d,[ str ]).
html_comp_i(31,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(31,'Class',row,v,[ str ]).
html_comp_i(31,'Id','',d,[ str ]).
html_comp_i(31,'Height',measure(0,px),d,[ measure ]).
html_comp_i(31,'Width',measure(0,px),d,[ measure ]).
html_comp_i(31,'Semanticcontent',div,d,[ str ]).
html_comp_i(31,'Align',left,d,[ str ]).
html_comp_i(31,'Valign',top,d,[ str ]).
html_comp_i(32,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(32,'Class','col-xs-12 col-lg-6 OrdersCell',v,[ str ]).
html_comp_i(32,'Id','',d,[ str ]).
html_comp_i(32,'Height',measure(0,px),d,[ measure ]).
html_comp_i(32,'Width',measure(0,px),d,[ measure ]).
html_comp_i(32,'Semanticcontent',div,d,[ str ]).
html_comp_i(32,'Align',left,d,[ str ]).
html_comp_i(32,'Valign',top,d,[ str ]).
html_comp_i(33,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(33,'Caption','Park Name',d,[ str ]).
html_comp_i(33,'Id','Orderby1',v,[ str ]).
html_comp_i(33,'Class','WWOrderItem WWOrderItemSelected',v,[ str ]).
html_comp_i(33,'Event','',d,[ str ]).
html_comp_i(33,'Returnonclick',0,d,[ bool ]).
html_comp_i(33,'Gxformat',0,d,[ num ]).
html_comp_i(33,'Title','',d,[ str ]).
html_comp_i(33,'Fill',-1,d,[ bool ]).
html_comp_i(33,'Backcolor',rgb(255,255,255),d,[ color ]).
html_comp_i(33,'Forecolor',rgb(0,0,0),d,[ color ]).
html_comp_i(33,'Font',font('Arial',10,[]),d,[ font ]).
html_comp_i(34,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(34,'Class','col-xs-12 col-lg-6 OrdersCell',v,[ str ]).
html_comp_i(34,'Id','',d,[ str ]).
html_comp_i(34,'Height',measure(0,px),d,[ measure ]).
html_comp_i(34,'Width',measure(0,px),d,[ measure ]).
html_comp_i(34,'Semanticcontent',div,d,[ str ]).
html_comp_i(34,'Align',left,d,[ str ]).
html_comp_i(34,'Valign',top,d,[ str ]).
html_comp_i(35,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(35,'Caption','Country Name',d,[ str ]).
html_comp_i(35,'Id','Orderby2',v,[ str ]).
html_comp_i(35,'Class','WWOrderItem',v,[ str ]).
html_comp_i(35,'Event','',d,[ str ]).
html_comp_i(35,'Returnonclick',0,d,[ bool ]).
html_comp_i(35,'Gxformat',0,d,[ num ]).
html_comp_i(35,'Title','',d,[ str ]).
html_comp_i(35,'Fill',-1,d,[ bool ]).
html_comp_i(35,'Backcolor',rgb(255,255,255),d,[ color ]).
html_comp_i(35,'Forecolor',rgb(0,0,0),d,[ color ]).
html_comp_i(35,'Font',font('Arial',10,[]),d,[ font ]).
html_comp_i(36,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(36,'Class','col-xs-12 col-sm-9 col-md-10 WWGridCell',v,[ str ]).
html_comp_i(36,'Id','Gridcell',v,[ str ]).
html_comp_i(36,'Height',measure(0,px),d,[ measure ]).
html_comp_i(36,'Width',measure(0,px),d,[ measure ]).
html_comp_i(36,'Semanticcontent',div,d,[ str ]).
html_comp_i(36,'Align',left,d,[ str ]).
html_comp_i(36,'Valign',top,d,[ str ]).
html_comp_i(37,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(37,'Class','ContainerFluid WWAdvancedContainer',v,[ str ]).
html_comp_i(37,'Id','Gridtable',v,[ str ]).
html_comp_i(37,'Height',measure(0,px),d,[ measure ]).
html_comp_i(37,'Width',measure(0,px),d,[ measure ]).
html_comp_i(37,'Semanticcontent',div,d,[ str ]).
html_comp_i(37,'Align',left,d,[ str ]).
html_comp_i(37,'Valign',top,d,[ str ]).
html_comp_i(38,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(38,'Class',row,v,[ str ]).
html_comp_i(38,'Id','',d,[ str ]).
html_comp_i(38,'Height',measure(0,px),d,[ measure ]).
html_comp_i(38,'Width',measure(0,px),d,[ measure ]).
html_comp_i(38,'Semanticcontent',div,d,[ str ]).
html_comp_i(38,'Align',left,d,[ str ]).
html_comp_i(38,'Valign',top,d,[ str ]).
html_comp_i(39,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(39,'Class','col-xs-12',v,[ str ]).
html_comp_i(39,'Id','',d,[ str ]).
html_comp_i(39,'Height',measure(0,px),d,[ measure ]).
html_comp_i(39,'Width',measure(0,px),d,[ measure ]).
html_comp_i(39,'Semanticcontent',div,d,[ str ]).
html_comp_i(39,'Align',left,d,[ str ]).
html_comp_i(39,'Valign',top,d,[ str ]).
html_comp_i(40,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(40,'Controlname','Errorviewer',v,[ str ]).
html_comp_i(40,'Class','ErrorViewer',v,[ str ]).
html_comp_i(40,'Displaymode',1,d,[ num ]).
html_comp_i(40,'Forecolor',rgb(255,0,0),d,[ color ]).
html_comp_i(40,'Font',font('Arial',9,[]),d,[ font ]).
html_comp_i(40,'Fill',-1,d,[ bool ]).
html_comp_i(41,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(41,'Class',row,v,[ str ]).
html_comp_i(41,'Id','',d,[ str ]).
html_comp_i(41,'Height',measure(0,px),d,[ measure ]).
html_comp_i(41,'Width',measure(0,px),d,[ measure ]).
html_comp_i(41,'Semanticcontent',div,d,[ str ]).
html_comp_i(41,'Align',left,d,[ str ]).
html_comp_i(41,'Valign',top,d,[ str ]).
html_comp_i(42,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(42,'Class','col-xs-12',v,[ str ]).
html_comp_i(42,'Id','',d,[ str ]).
html_comp_i(42,'Height',measure(0,px),d,[ measure ]).
html_comp_i(42,'Width',measure(0,px),d,[ measure ]).
html_comp_i(42,'Semanticcontent',div,d,[ str ]).
html_comp_i(42,'Align',left,d,[ str ]).
html_comp_i(42,'Valign',top,d,[ str ]).
html_comp_i(43,'Isabstractlayoutcontrol',-1,v,[ bool ]).
html_comp_i(43,'Controlname','Grid',v,[ str ]).
html_comp_i(43,'Controlorder','''.''(''.''(t($ORDER$,39),''.''(t(8,2),''.''(t($when$,35),''.''(t($Orderedby$,23),''.''(t($=$,10),''.''(t($1$,3),''.''(t($ORDER$,39),''.''(t(13,2),''.''(t($when$,35),''.''(t($Orderedby$,23),''.''(t($=$,10),''.''(t($2$,3),$[]$)))))))))))),$[]$)',v,[ str ]).
html_comp_i(43,'Controlwhere','',d,[ str ]).
html_comp_i(43,'Controlunique','',d,[ str ]).
html_comp_i(43,'Save_state',0,d,[ bool ]).
html_comp_i(43,'Iddataselector','',d,[ str ]).
html_comp_i(43,'Sflrender','',d,[ str ]).
html_comp_i(43,'Class','WorkWith',v,[ str ]).
html_comp_i(43,'Prop_emptydatasettext','',d,[ str ]).
html_comp_i(43,'Autoresize',-1,d,[ bool ]).
html_comp_i(43,'Gxwidth',measure(0,px),d,[ measure ]).
html_comp_i(43,'Gxheight',measure(0,px),d,[ measure ]).
html_comp_i(43,'Maxcols',1,d,[ num ]).
html_comp_i(43,'Maxrows',10,v,[ num ]).
html_comp_i(43,'Header','',d,[ str ]).
html_comp_i(43,'Title','',d,[ str ]).
html_comp_i(43,'Infinitescrolling',0,v,[ num ]).
html_comp_i(43,'Linescolor',rgb(255,255,255),d,[ color ]).
html_comp_i(43,'Linesfont',font('Arial',10,[]),d,[ font ]).
html_comp_i(43,'Titlecolor',rgb(255,255,255),d,[ color ]).
html_comp_i(43,'Titlefont',font('Arial',10,[]),d,[ font ]).
html_comp_i(43,'Align',left,d,[ str ]).
html_comp_i(43,'Cellpadding','1',d,[ str ]).
html_comp_i(43,'Cellspacing','2',d,[ str ]).
html_comp_i(43,'Sortable',-1,d,[ bool ]).
html_comp_i(43,'Allowdrop',0,d,[ bool ]).
html_comp_i(43,'Allowdrag',0,d,[ bool ]).
html_comp_i(43,'Notifycontextchange',0,d,[ bool ]).
html_comp_i(43,'Allowcollapsing',0,d,[ bool ]).
html_comp_i(43,'Allowselection',0,d,[ bool ]).
html_comp_i(44,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(44,'Colcount',4,d,[ num ]).
html_comp_i(44,'Colattid',7,v,[ num ]).
html_comp_i(44,'Controlname','Amusementparkid',d,[ str ]).
html_comp_i(44,'Class','Attribute',v,[ str ]).
html_comp_i(44,'Columnclass','WWColumn WWOptionalColumn',v,[ str ]).
html_comp_i(44,'Returnonclick',0,d,[ bool ]).
html_comp_i(44,'Eventgx','',d,[ str ]).
html_comp_i(44,'Controltype',2,d,[ num ]).
html_comp_i(44,'Inputtype',0,d,[ num ]).
html_comp_i(44,'Notifycontextchange',0,d,[ bool ]).
html_comp_i(44,'Colreadonly',-1,d,[ bool ]).
html_comp_i(44,'Autocomplete',-1,d,[ bool ]).
html_comp_i(44,'Emptyasnull','Yes',d,[ str ]).
html_comp_i(44,'Ispassword',0,d,[ bool ]).
html_comp_i(44,'Colautoresize',-1,d,[ bool ]).
html_comp_i(44,'Colwidth',measure(0,px),d,[ measure ]).
html_comp_i(44,'Height',measure(17,px),d,[ measure ]).
html_comp_i(44,'Collinesfont',font('Arial',10,[]),d,[ font ]).
html_comp_i(44,'Collinescolor',rgb(255,255,255),d,[ color ]).
html_comp_i(44,'Coltitle','Park Id',d,[ str ]).
html_comp_i(44,'Coltitlefont',font('Arial',10,[]),d,[ font ]).
html_comp_i(44,'Coltitlecolor',rgb(255,255,255),d,[ color ]).
html_comp_i(44,'Horizontalalignment',right,d,[ str ]).
html_comp_i(44,'Gxformat',0,d,[ num ]).
html_comp_i(44,'Colvisible',-1,v,[ bool ]).
html_comp_i(44,'Title','',d,[ str ]).
html_comp_i(44,'Invitemsg','',d,[ str ]).
html_comp_i(45,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(45,'Colcount',20,d,[ num ]).
html_comp_i(45,'Colattid',8,v,[ num ]).
html_comp_i(45,'Controlname','Amusementparkname',d,[ str ]).
html_comp_i(45,'Class','DescriptionAttribute',v,[ str ]).
html_comp_i(45,'Columnclass','WWColumn',v,[ str ]).
html_comp_i(45,'Returnonclick',0,d,[ bool ]).
html_comp_i(45,'Eventgx','',d,[ str ]).
html_comp_i(45,'Controltype',2,d,[ num ]).
html_comp_i(45,'Inputtype',0,d,[ num ]).
html_comp_i(45,'Editautocomplete',0,d,[ num ]).
html_comp_i(45,'Autocorrection',-1,d,[ bool ]).
html_comp_i(45,'Autocapitalization','FirstWord',d,[ str ]).
html_comp_i(45,'Notifycontextchange',0,d,[ bool ]).
html_comp_i(45,'Colreadonly',-1,d,[ bool ]).
html_comp_i(45,'Autocomplete',-1,d,[ bool ]).
html_comp_i(45,'Emptyasnull','Yes',d,[ str ]).
html_comp_i(45,'Ispassword',0,d,[ bool ]).
html_comp_i(45,'Colautoresize',-1,d,[ bool ]).
html_comp_i(45,'Colwidth',measure(0,px),d,[ measure ]).
html_comp_i(45,'Height',measure(17,px),d,[ measure ]).
html_comp_i(45,'Collinesfont',font('Arial',10,[]),d,[ font ]).
html_comp_i(45,'Collinescolor',rgb(255,255,255),d,[ color ]).
html_comp_i(45,'Coltitle','Park Name',d,[ str ]).
html_comp_i(45,'Coltitlefont',font('Arial',10,[]),d,[ font ]).
html_comp_i(45,'Coltitlecolor',rgb(255,255,255),d,[ color ]).
html_comp_i(45,'Horizontalalignment',left,d,[ str ]).
html_comp_i(45,'Gxformat',0,d,[ num ]).
html_comp_i(45,'Colvisible',-1,v,[ bool ]).
html_comp_i(45,'Title','',d,[ str ]).
html_comp_i(45,'Invitemsg','',d,[ str ]).
html_comp_i(46,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(46,'Colcount',60,d,[ num ]).
html_comp_i(46,'Colattid',9,v,[ num ]).
html_comp_i(46,'Controlname','Amusementparkwebsite',d,[ str ]).
html_comp_i(46,'Class','Attribute',v,[ str ]).
html_comp_i(46,'Columnclass','WWColumn WWOptionalColumn',v,[ str ]).
html_comp_i(46,'Returnonclick',0,d,[ bool ]).
html_comp_i(46,'Eventgx','',d,[ str ]).
html_comp_i(46,'Controltype',2,d,[ num ]).
html_comp_i(46,'Inputtype',0,d,[ num ]).
html_comp_i(46,'Editautocomplete',0,d,[ num ]).
html_comp_i(46,'Autocorrection',-1,d,[ bool ]).
html_comp_i(46,'Autocapitalization','FirstWord',d,[ str ]).
html_comp_i(46,'Notifycontextchange',0,d,[ bool ]).
html_comp_i(46,'Colreadonly',-1,d,[ bool ]).
html_comp_i(46,'Autocomplete',-1,d,[ bool ]).
html_comp_i(46,'Emptyasnull','Yes',d,[ str ]).
html_comp_i(46,'Ispassword',0,d,[ bool ]).
html_comp_i(46,'Colautoresize',-1,d,[ bool ]).
html_comp_i(46,'Colwidth',measure(0,px),d,[ measure ]).
html_comp_i(46,'Height',measure(17,px),d,[ measure ]).
html_comp_i(46,'Collinesfont',font('Arial',10,[]),d,[ font ]).
html_comp_i(46,'Collinescolor',rgb(255,255,255),d,[ color ]).
html_comp_i(46,'Coltitle','Park Website',d,[ str ]).
html_comp_i(46,'Coltitlefont',font('Arial',10,[]),d,[ font ]).
html_comp_i(46,'Coltitlecolor',rgb(255,255,255),d,[ color ]).
html_comp_i(46,'Horizontalalignment',left,d,[ str ]).
html_comp_i(46,'Gxformat',0,d,[ num ]).
html_comp_i(46,'Colvisible',-1,v,[ bool ]).
html_comp_i(46,'Title','',d,[ str ]).
html_comp_i(46,'Invitemsg','',d,[ str ]).
html_comp_i(47,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(47,'Colcount',80,d,[ num ]).
html_comp_i(47,'Colattid',10,v,[ num ]).
html_comp_i(47,'Controlname','Amusementparkaddress',d,[ str ]).
html_comp_i(47,'Class','Attribute',v,[ str ]).
html_comp_i(47,'Columnclass','WWColumn WWOptionalColumn',v,[ str ]).
html_comp_i(47,'Returnonclick',0,d,[ bool ]).
html_comp_i(47,'Eventgx','',d,[ str ]).
html_comp_i(47,'Controltype',2,d,[ num ]).
html_comp_i(47,'Inputtype',0,d,[ num ]).
html_comp_i(47,'Editautocomplete',0,d,[ num ]).
html_comp_i(47,'Autocorrection',0,d,[ bool ]).
html_comp_i(47,'Autocapitalization','FirstWord',d,[ str ]).
html_comp_i(47,'Notifycontextchange',0,d,[ bool ]).
html_comp_i(47,'Colreadonly',-1,d,[ bool ]).
html_comp_i(47,'Autocomplete',-1,d,[ bool ]).
html_comp_i(47,'Emptyasnull','Yes',d,[ str ]).
html_comp_i(47,'Ispassword',0,d,[ bool ]).
html_comp_i(47,'Colautoresize',-1,d,[ bool ]).
html_comp_i(47,'Colwidth',measure(0,px),d,[ measure ]).
html_comp_i(47,'Height',measure(17,px),d,[ measure ]).
html_comp_i(47,'Collinesfont',font('Arial',10,[]),d,[ font ]).
html_comp_i(47,'Collinescolor',rgb(255,255,255),d,[ color ]).
html_comp_i(47,'Coltitle','Park Address',d,[ str ]).
html_comp_i(47,'Coltitlefont',font('Arial',10,[]),d,[ font ]).
html_comp_i(47,'Coltitlecolor',rgb(255,255,255),d,[ color ]).
html_comp_i(47,'Horizontalalignment',left,d,[ str ]).
html_comp_i(47,'Gxformat',0,d,[ num ]).
html_comp_i(47,'Colvisible',-1,v,[ bool ]).
html_comp_i(47,'Title','',d,[ str ]).
html_comp_i(47,'Invitemsg','',d,[ str ]).
html_comp_i(48,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(48,'Colcount',5,d,[ num ]).
html_comp_i(48,'Colattid',11,v,[ num ]).
html_comp_i(48,'Controlname','Amusementparkphoto',d,[ str ]).
html_comp_i(48,'Class','ImageAttribute',v,[ str ]).
html_comp_i(48,'Columnclass','WWColumn WWOptionalColumn',v,[ str ]).
html_comp_i(48,'Returnonclick',0,d,[ bool ]).
html_comp_i(48,'Eventgx','',d,[ str ]).
html_comp_i(48,'Controltype',2,d,[ num ]).
html_comp_i(48,'Inputtype',0,d,[ num ]).
html_comp_i(48,'Notifycontextchange',0,d,[ bool ]).
html_comp_i(48,'Autocomplete',0,d,[ bool ]).
html_comp_i(48,'Emptyasnull','Yes',d,[ str ]).
html_comp_i(48,'Colautoresize',-1,d,[ bool ]).
html_comp_i(48,'Colwidth',measure(0,px),d,[ measure ]).
html_comp_i(48,'Height',measure(17,px),d,[ measure ]).
html_comp_i(48,'Coltitle','Park Photo',d,[ str ]).
html_comp_i(48,'Coltitlefont',font('Arial',10,[]),d,[ font ]).
html_comp_i(48,'Coltitlecolor',rgb(255,255,255),d,[ color ]).
html_comp_i(48,'Colvisible',-1,v,[ bool ]).
html_comp_i(48,'Border','1',d,[ str ]).
html_comp_i(48,'Alt','',d,[ str ]).
html_comp_i(48,'Title','',d,[ str ]).
html_comp_i(48,'Hspace',0,d,[ num ]).
html_comp_i(48,'Vspace',0,d,[ num ]).
html_comp_i(49,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(49,'Colcount',50,d,[ num ]).
html_comp_i(49,'Colattid',13,v,[ num ]).
html_comp_i(49,'Controlname','Countryname',d,[ str ]).
html_comp_i(49,'Class','Attribute',v,[ str ]).
html_comp_i(49,'Columnclass','WWColumn WWOptionalColumn',v,[ str ]).
html_comp_i(49,'Returnonclick',0,d,[ bool ]).
html_comp_i(49,'Eventgx','',d,[ str ]).
html_comp_i(49,'Controltype',2,d,[ num ]).
html_comp_i(49,'Inputtype',0,d,[ num ]).
html_comp_i(49,'Editautocomplete',0,d,[ num ]).
html_comp_i(49,'Autocorrection',-1,d,[ bool ]).
html_comp_i(49,'Autocapitalization','FirstWord',d,[ str ]).
html_comp_i(49,'Notifycontextchange',0,d,[ bool ]).
html_comp_i(49,'Colreadonly',-1,d,[ bool ]).
html_comp_i(49,'Autocomplete',-1,d,[ bool ]).
html_comp_i(49,'Emptyasnull','Yes',d,[ str ]).
html_comp_i(49,'Ispassword',0,d,[ bool ]).
html_comp_i(49,'Colautoresize',-1,d,[ bool ]).
html_comp_i(49,'Colwidth',measure(0,px),d,[ measure ]).
html_comp_i(49,'Height',measure(17,px),d,[ measure ]).
html_comp_i(49,'Collinesfont',font('Arial',10,[]),d,[ font ]).
html_comp_i(49,'Collinescolor',rgb(255,255,255),d,[ color ]).
html_comp_i(49,'Coltitle','Country Name',d,[ str ]).
html_comp_i(49,'Coltitlefont',font('Arial',10,[]),d,[ font ]).
html_comp_i(49,'Coltitlecolor',rgb(255,255,255),d,[ color ]).
html_comp_i(49,'Horizontalalignment',left,d,[ str ]).
html_comp_i(49,'Gxformat',0,d,[ num ]).
html_comp_i(49,'Colvisible',-1,v,[ bool ]).
html_comp_i(49,'Title','',d,[ str ]).
html_comp_i(49,'Invitemsg','',d,[ str ]).
html_comp_i(50,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(50,'Colcount',50,d,[ num ]).
html_comp_i(50,'Colattid',20,v,[ num ]).
html_comp_i(50,'Controlname','Cityname',d,[ str ]).
html_comp_i(50,'Class','Attribute',v,[ str ]).
html_comp_i(50,'Columnclass','WWColumn WWOptionalColumn',v,[ str ]).
html_comp_i(50,'Returnonclick',0,d,[ bool ]).
html_comp_i(50,'Eventgx','',d,[ str ]).
html_comp_i(50,'Controltype',2,d,[ num ]).
html_comp_i(50,'Inputtype',0,d,[ num ]).
html_comp_i(50,'Editautocomplete',0,d,[ num ]).
html_comp_i(50,'Autocorrection',-1,d,[ bool ]).
html_comp_i(50,'Autocapitalization','FirstWord',d,[ str ]).
html_comp_i(50,'Notifycontextchange',0,d,[ bool ]).
html_comp_i(50,'Colreadonly',-1,d,[ bool ]).
html_comp_i(50,'Autocomplete',-1,d,[ bool ]).
html_comp_i(50,'Emptyasnull','Yes',d,[ str ]).
html_comp_i(50,'Ispassword',0,d,[ bool ]).
html_comp_i(50,'Colautoresize',-1,d,[ bool ]).
html_comp_i(50,'Colwidth',measure(0,px),d,[ measure ]).
html_comp_i(50,'Height',measure(17,px),d,[ measure ]).
html_comp_i(50,'Collinesfont',font('Arial',10,[]),d,[ font ]).
html_comp_i(50,'Collinescolor',rgb(255,255,255),d,[ color ]).
html_comp_i(50,'Coltitle','City Name',d,[ str ]).
html_comp_i(50,'Coltitlefont',font('Arial',10,[]),d,[ font ]).
html_comp_i(50,'Coltitlecolor',rgb(255,255,255),d,[ color ]).
html_comp_i(50,'Horizontalalignment',left,d,[ str ]).
html_comp_i(50,'Gxformat',0,d,[ num ]).
html_comp_i(50,'Colvisible',-1,v,[ bool ]).
html_comp_i(50,'Title','',d,[ str ]).
html_comp_i(50,'Invitemsg','',d,[ str ]).
html_comp_i(51,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(51,'Colcount',20,d,[ num ]).
html_comp_i(51,'Colattid',-12,v,[ num ]).
html_comp_i(51,'Controlname','&Update',d,[ str ]).
html_comp_i(51,'Class','TextActionAttribute',v,[ str ]).
html_comp_i(51,'Columnclass','WWTextActionColumn',v,[ str ]).
html_comp_i(51,'Returnonclick',0,d,[ bool ]).
html_comp_i(51,'Eventgx','',d,[ str ]).
html_comp_i(51,'Controltype',2,d,[ num ]).
html_comp_i(51,'Inputtype',0,d,[ num ]).
html_comp_i(51,'Editautocomplete',0,d,[ num ]).
html_comp_i(51,'Autocorrection',-1,d,[ bool ]).
html_comp_i(51,'Autocapitalization','FirstWord',d,[ str ]).
html_comp_i(51,'Notifycontextchange',0,d,[ bool ]).
html_comp_i(51,'Colreadonly',-1,v,[ bool ]).
html_comp_i(51,'Autocomplete',-1,d,[ bool ]).
html_comp_i(51,'Emptyasnull','Yes',d,[ str ]).
html_comp_i(51,'Ispassword',0,d,[ bool ]).
html_comp_i(51,'Colautoresize',-1,d,[ bool ]).
html_comp_i(51,'Colwidth',measure(0,px),d,[ measure ]).
html_comp_i(51,'Height',measure(17,px),d,[ measure ]).
html_comp_i(51,'Collinesfont',font('Arial',10,[]),d,[ font ]).
html_comp_i(51,'Collinescolor',rgb(255,255,255),d,[ color ]).
html_comp_i(51,'Coltitle','',d,[ str ]).
html_comp_i(51,'Coltitlefont',font('Arial',10,[]),d,[ font ]).
html_comp_i(51,'Coltitlecolor',rgb(255,255,255),d,[ color ]).
html_comp_i(51,'Horizontalalignment',left,d,[ str ]).
html_comp_i(51,'Gxformat',0,d,[ num ]).
html_comp_i(51,'Colvisible',-1,d,[ bool ]).
html_comp_i(51,'Title','',d,[ str ]).
html_comp_i(51,'Invitemsg','',d,[ str ]).
html_comp_i(52,'Isabstractlayoutcontrol',0,d,[ bool ]).
html_comp_i(52,'Colcount',20,d,[ num ]).
html_comp_i(52,'Colattid',-13,v,[ num ]).
html_comp_i(52,'Controlname','&Delete',d,[ str ]).
html_comp_i(52,'Class','TextActionAttribute',v,[ str ]).
html_comp_i(52,'Columnclass','WWTextActionColumn',v,[ str ]).
html_comp_i(52,'Returnonclick',0,d,[ bool ]).
html_comp_i(52,'Eventgx','',d,[ str ]).
html_comp_i(52,'Controltype',2,d,[ num ]).
html_comp_i(52,'Inputtype',0,d,[ num ]).
html_comp_i(52,'Editautocomplete',0,d,[ num ]).
html_comp_i(52,'Autocorrection',-1,d,[ bool ]).
html_comp_i(52,'Autocapitalization','FirstWord',d,[ str ]).
html_comp_i(52,'Notifycontextchange',0,d,[ bool ]).
html_comp_i(52,'Colreadonly',-1,v,[ bool ]).
html_comp_i(52,'Autocomplete',-1,d,[ bool ]).
html_comp_i(52,'Emptyasnull','Yes',d,[ str ]).
html_comp_i(52,'Ispassword',0,d,[ bool ]).
html_comp_i(52,'Colautoresize',-1,d,[ bool ]).
html_comp_i(52,'Colwidth',measure(0,px),d,[ measure ]).
html_comp_i(52,'Height',measure(17,px),d,[ measure ]).
html_comp_i(52,'Collinesfont',font('Arial',10,[]),d,[ font ]).
html_comp_i(52,'Collinescolor',rgb(255,255,255),d,[ color ]).
html_comp_i(52,'Coltitle','',d,[ str ]).
html_comp_i(52,'Coltitlefont',font('Arial',10,[]),d,[ font ]).
html_comp_i(52,'Coltitlecolor',rgb(255,255,255),d,[ color ]).
html_comp_i(52,'Horizontalalignment',left,d,[ str ]).
html_comp_i(52,'Gxformat',0,d,[ num ]).
html_comp_i(52,'Colvisible',-1,d,[ bool ]).
html_comp_i(52,'Title','',d,[ str ]).
html_comp_i(52,'Invitemsg','',d,[ str ]).
 
 
 
 
 
 
 
 
 
lit_i(9,1,button('''Toggle'''),[ ctlname('Btntoggle'),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(8,1,div(8),[ ctlname('') ]).
lit_i(11,1,t('Amusement Parks',3),[ ctlname('Titletext') ]).
lit_i(10,1,div(10),[ ctlname('') ]).
lit_i(15,1,button('''DoInsert'''),[ ctlname('Btninsert'),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(14,1,div(14),[ ctlname('') ]).
lit_i(13,1,div(13),[ ctlname('') ]).
lit_i(12,1,div(12),[ ctlname('') ]).
lit_i(18,1,t('Amusementparkname',23),[ ctlname('&Amusementparkname'),ctrltype(edit,18),pos(18),ispwd(0),e2n(1),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(17,1,div(17),[ ctlname('') ]).
lit_i(16,1,div(16),[ ctlname('') ]).
lit_i(7,1,div(7),[ ctlname('') ]).
lit_i(6,1,div(6),[ ctlname('Tabletop') ]).
lit_i(5,1,div(5),[ ctlname('') ]).
lit_i(4,1,div(4),[ ctlname('') ]).
lit_i(27,1,t('Ordered By',3),[ ctlname('Lblorderby') ]).
lit_i(26,1,div(26),[ ctlname('') ]).
lit_i(25,1,div(25),[ ctlname('') ]).
lit_i(33,1,t('Park Name',3),[ ctlname('Orderby1') ]).
lit_i(32,1,div(32),[ ctlname('') ]).
lit_i(35,1,t('Country Name',3),[ ctlname('Orderby2') ]).
lit_i(34,1,div(34),[ ctlname('') ]).
lit_i(31,1,div(31),[ ctlname('') ]).
lit_i(30,1,div(30),[ ctlname('Orderbycontainer2') ]).
lit_i(29,1,div(29),[ ctlname('') ]).
lit_i(28,1,div(28),[ ctlname('') ]).
lit_i(24,1,div(24),[ ctlname('Orderbycontainer') ]).
lit_i(23,1,div(23),[ ctlname('') ]).
lit_i(22,1,div(22),[ ctlname('') ]).
lit_i(21,1,div(21),[ ctlname('Filterscontainer') ]).
lit_i(20,1,div(20),[ ctlname('') ]).
lit_i(40,1,comp(errview),[ ctlname('Errorviewer'),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(39,1,div(39),[ ctlname('') ]).
lit_i(38,1,div(38),[ ctlname('') ]).
lit_i(44,1,s(t(7,2),43),[ ctlname(7),ctrltype(edit,44),pos(44),readonly,ispwd(0),e2n(1),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(45,1,s(t(8,2),43),[ ctlname(8),ctrltype(edit,45),pos(45),readonly,ispwd(0),e2n(1),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(46,1,s(t(9,2),43),[ ctlname(9),ctrltype(edit,46),pos(46),readonly,ispwd(0),e2n(1),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(47,1,s(t(10,2),43),[ ctlname(10),ctrltype(edit,47),pos(47),readonly,ispwd(0),e2n(1),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(48,1,s(t(11,2),43),[ ctlname(11),ctrltype(edit,48),pos(48),readonly,ispwd(0),e2n(1),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(49,1,s(t(13,2),43),[ ctlname(13),ctrltype(edit,49),pos(49),readonly,ispwd(0),e2n(1),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(50,1,s(t(20,2),43),[ ctlname(20),ctrltype(edit,50),pos(50),readonly,ispwd(0),e2n(1),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(51,1,s(t('Update',23),43),[ ctlname('&Update'),ctrltype(edit,51),pos(51),readonly,ispwd(0),e2n(1),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(52,1,s(t('Delete',23),43),[ ctlname('&Delete'),ctrltype(edit,52),pos(52),readonly,ispwd(0),e2n(1),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(43,1,s(43),[ ctlname('Grid'),el([ t(7,2),t(8,2),t(9,2),t(10,2),t(11,2),t(13,2),t(20,2),t('Update',23),t('Delete',23) ]),width(0),rect(0,0,10,10),title('Nothing') ]).
lit_i(42,1,div(42),[ ctlname('') ]).
lit_i(41,1,div(41),[ ctlname('') ]).
lit_i(37,1,div(37),[ ctlname('Gridtable') ]).
lit_i(36,1,div(36),[ ctlname('Gridcell') ]).
lit_i(19,1,div(19),[ ctlname('') ]).
lit_i(3,1,div(3),[ ctlname('Maintable') ]).
lit_i(2,1,div(2),[ ctlname('') ]).
lit_i(1,1,window,[ rect(0,0,1000,1000),ctlname('Form') ]).
 
 
 
 
 
 
 
 
 
att_prop_i(2,7,'ExternalName','AmusementParkId',d).
att_prop_i(2,7,'ExternalNamespace','Parksz',d).
att_prop_i(2,7,'EmptyAsNull','Yes',d).
att_prop_i(2,7,idBasedOn,'',d).
att_prop_i(2,7,'AUTONUMBER','-1',v).
att_prop_i(2,7,'AUTONUMBER_START','1',d).
att_prop_i(2,7,'AUTONUMBER_STEP','1',d).
att_prop_i(2,7,'AUTONUMBER_FORREPLICATION','-1',d).
att_prop_i(2,7,'ATT_INITIAL_VALUE','',d).
att_prop_i(2,7,'AttRegEx','',d).
att_prop_i(2,7,'AttValidationFailedMsg','',d).
att_prop_i(2,7,'DownloadOffline','0',d).
att_prop_i(2,7,'VarServiceExtName','',d).
att_prop_i(2,7,'FullName','AmusementParkId',v).
att_prop_i(2,8,'ExternalName','AmusementParkName',d).
att_prop_i(2,8,'ExternalNamespace','Parksz',d).
att_prop_i(2,8,'EmptyAsNull','Yes',d).
att_prop_i(2,8,idBasedOn,'',d).
att_prop_i(2,8,'ATT_INITIAL_VALUE','',d).
att_prop_i(2,8,'DB_NLS_SUPPORT','Yes',d).
att_prop_i(2,8,'AttRegEx','',d).
att_prop_i(2,8,'AttValidationFailedMsg','',d).
att_prop_i(2,8,'DownloadOffline','0',d).
att_prop_i(2,8,'VarServiceExtName','',d).
att_prop_i(2,8,'FullName','AmusementParkName',v).
att_prop_i(2,9,'ExternalName','AmusementParkWebsite',d).
att_prop_i(2,9,'ExternalNamespace','Parksz',d).
att_prop_i(2,9,'EmptyAsNull','Yes',d).
att_prop_i(2,9,idBasedOn,'',d).
att_prop_i(2,9,'ATT_INITIAL_VALUE','',d).
att_prop_i(2,9,'DB_NLS_SUPPORT','Yes',d).
att_prop_i(2,9,'AttRegEx','',d).
att_prop_i(2,9,'AttValidationFailedMsg','',d).
att_prop_i(2,9,'DownloadOffline','0',d).
att_prop_i(2,9,'VarServiceExtName','',d).
att_prop_i(2,9,'FullName','AmusementParkWebsite',v).
att_prop_i(2,10,'ExternalName','AmusementParkAddress',d).
att_prop_i(2,10,'ExternalNamespace','Parksz',d).
att_prop_i(2,10,'EmptyAsNull','Yes',d).
att_prop_i(2,10,idBasedOn,42,v).
att_prop_i(2,10,'ATT_INITIAL_VALUE','',d).
att_prop_i(2,10,'DB_NLS_SUPPORT','Yes',d).
att_prop_i(2,10,'AttRegEx','',d).
att_prop_i(2,10,'AttValidationFailedMsg','',d).
att_prop_i(2,10,'DownloadOffline','0',d).
att_prop_i(2,10,'VarServiceExtName','',d).
att_prop_i(2,10,'FullName','AmusementParkAddress',v).
att_prop_i(2,11,'ExternalName','AmusementParkPhoto',d).
att_prop_i(2,11,'ExternalNamespace','Parksz',d).
att_prop_i(2,11,'EmptyAsNull','Yes',d).
att_prop_i(2,11,'ExternalStorage','-1',d).
att_prop_i(2,11,idBasedOn,'',d).
att_prop_i(2,11,'ATT_INITIAL_VALUE','',d).
att_prop_i(2,11,'AttRegEx','',d).
att_prop_i(2,11,'AttValidationFailedMsg','',d).
att_prop_i(2,11,'DownloadOffline','0',d).
att_prop_i(2,11,'VarServiceExtName','',d).
att_prop_i(2,11,'FullName','AmusementParkPhoto',v).
att_prop_i(2,13,'ExternalName','CountryName',d).
att_prop_i(2,13,'ExternalNamespace','Parksz',d).
att_prop_i(2,13,'EmptyAsNull','Yes',d).
att_prop_i(2,13,idBasedOn,85,v).
att_prop_i(2,13,'ATT_INITIAL_VALUE','',d).
att_prop_i(2,13,'DB_NLS_SUPPORT','Yes',d).
att_prop_i(2,13,'AttRegEx','',d).
att_prop_i(2,13,'AttValidationFailedMsg','',d).
att_prop_i(2,13,'DownloadOffline','0',d).
att_prop_i(2,13,'VarServiceExtName','',d).
att_prop_i(2,13,'FullName','CountryName',v).
att_prop_i(2,20,'ExternalName','CityName',d).
att_prop_i(2,20,'ExternalNamespace','Parksz',d).
att_prop_i(2,20,'EmptyAsNull','Yes',d).
att_prop_i(2,20,idBasedOn,85,v).
att_prop_i(2,20,'ATT_INITIAL_VALUE','',d).
att_prop_i(2,20,'DB_NLS_SUPPORT','Yes',d).
att_prop_i(2,20,'AttRegEx','',d).
att_prop_i(2,20,'AttValidationFailedMsg','',d).
att_prop_i(2,20,'DownloadOffline','0',d).
att_prop_i(2,20,'VarServiceExtName','',d).
att_prop_i(2,20,'FullName','CityName',v).
att_prop_i(2,12,'ExternalName','CountryId',d).
att_prop_i(2,12,'ExternalNamespace','Parksz',d).
att_prop_i(2,12,'EmptyAsNull','Yes',d).
att_prop_i(2,12,idBasedOn,'',d).
att_prop_i(2,12,'AUTONUMBER','-1',v).
att_prop_i(2,12,'AUTONUMBER_START','1',d).
att_prop_i(2,12,'AUTONUMBER_STEP','1',d).
att_prop_i(2,12,'AUTONUMBER_FORREPLICATION','-1',d).
att_prop_i(2,12,'ATT_INITIAL_VALUE','',d).
att_prop_i(2,12,'AttRegEx','',d).
att_prop_i(2,12,'AttValidationFailedMsg','',d).
att_prop_i(2,12,'DownloadOffline','0',d).
att_prop_i(2,12,'VarServiceExtName','',d).
att_prop_i(2,12,'FullName','CountryId',v).
att_prop_i(2,19,'ExternalName','CityId',d).
att_prop_i(2,19,'ExternalNamespace','Parksz',d).
att_prop_i(2,19,'EmptyAsNull','Yes',d).
att_prop_i(2,19,idBasedOn,'',d).
att_prop_i(2,19,'AUTONUMBER','-1',v).
att_prop_i(2,19,'AUTONUMBER_START','1',d).
att_prop_i(2,19,'AUTONUMBER_STEP','1',d).
att_prop_i(2,19,'AUTONUMBER_FORREPLICATION','-1',d).
att_prop_i(2,19,'ATT_INITIAL_VALUE','',d).
att_prop_i(2,19,'AttRegEx','',d).
att_prop_i(2,19,'AttValidationFailedMsg','',d).
att_prop_i(2,19,'DownloadOffline','0',d).
att_prop_i(2,19,'VarServiceExtName','',d).
att_prop_i(2,19,'FullName','CityId',v).
att_prop_i(2,40000,'ExternalName','',d).
att_prop_i(2,40000,'ExternalNamespace','',d).
att_prop_i(2,40000,'EmptyAsNull','Yes',d).
att_prop_i(2,40000,idBasedOn,'',d).
att_prop_i(2,40000,'AUTONUMBER','0',d).
att_prop_i(2,40000,'ATT_INITIAL_VALUE','',d).
att_prop_i(2,40000,'AttRegEx','',d).
att_prop_i(2,40000,'AttValidationFailedMsg','',d).
att_prop_i(2,40000,'FullName','',v).
 
tbl_prop_i(2,6,'AllDirSuper',[ [ 3,[ 12 ] ] ],v).
tbl_prop_i(2,2,'AllDirSuper',[ [ 6,[ 12,19 ] ],[ 3,[ 12 ] ] ],v).
tbl_prop_i(2,2,'DirSuperNull',[ [ 6,[ 12,19 ] ] ],v).
tbl_prop_i(2,6,'DirSubor',[ [ 2,[ 12,19 ] ] ],v).
tbl_prop_i(2,3,'DirSubor',[ [ 6,[ 12 ] ] ],v).
tbl_prop_i(2,6,'DirSuper',[ [ 3,[ 12 ] ] ],v).
tbl_prop_i(2,2,'DirSuper',[ [ 6,[ 12,19 ] ] ],v).
 
tbl_att_prop_i(2,2,7,'AllowNulls',n).
tbl_att_prop_i(2,2,7,'AUTONUMBER',y).
tbl_att_prop_i(2,2,8,'AllowNulls',n).
tbl_att_prop_i(2,2,9,'AllowNulls',n).
tbl_att_prop_i(2,2,10,'AllowNulls',n).
tbl_att_prop_i(2,2,11,'AllowNulls',n).
tbl_att_prop_i(2,2,40000,'AllowNulls',n).
tbl_att_prop_i(2,2,12,'AllowNulls',n).
tbl_att_prop_i(2,3,12,'AllowNulls',n).
tbl_att_prop_i(2,3,12,'AUTONUMBER',y).
tbl_att_prop_i(2,3,13,'AllowNulls',n).
tbl_att_prop_i(2,6,12,'AllowNulls',n).
tbl_att_prop_i(2,6,19,'AllowNulls',n).
tbl_att_prop_i(2,6,20,'AllowNulls',n).
 
var_prop_i(2,'Amusementparkname',idBasedOn,'',v).
 
 
 
 
 
struct_dt_i([ 26,20,0 ],name,'GeneXus\Common\GridState').
struct_dt_i([ 26,20,0 ],namespace,'GeneXus').
struct_dt_i([ 26,20,0 ],'ObjName','GridState').
struct_dt_i([ 26,20,0 ],'ObjDesc','Grid State').
struct_dt_i([ 26,20,0 ],'ExternalName','GridState').
struct_dt_i([ 26,20,0 ],'ExternalNamespace','GeneXus').
struct_dt_i([ 26,20,0 ],'JsonInclude',idJsonNoProperty).
struct_dt_i([ 26,20,0 ],isexternal,'True').
struct_dt_i([ 26,20,39 ],name,'InputValuesItem').
struct_dt_i([ 26,20,39 ],namespace,'GeneXus.GridState').
struct_dt_i([ 26,56,0 ],name,'TransactionContext').
struct_dt_i([ 26,56,0 ],namespace,'Parksz').
struct_dt_i([ 26,56,0 ],'ObjName','TransactionContext').
struct_dt_i([ 26,56,0 ],'ObjDesc','Transaction Context').
struct_dt_i([ 26,56,0 ],'ExternalName','TransactionContext').
struct_dt_i([ 26,56,0 ],'ExternalNamespace','Parksz').
struct_dt_i([ 26,56,0 ],'JsonInclude',idJsonNoProperty).
struct_dt_i([ 26,56,84 ],name,'Attribute').
struct_dt_i([ 26,56,84 ],namespace,'Parksz.TransactionContext').
struct_dt_i([ 26,20,0 ],fullname,'GeneXus\Common\GridState').
struct_dt_i([ 26,20,39 ],fullname,'GeneXus\Common\GridState.InputValuesItem').
struct_dt_i([ 26,56,0 ],fullname,'TransactionContext').
struct_dt_i([ 26,56,84 ],fullname,'TransactionContext.Attribute').
 
struct_dt_elem_i([ 26,20,0 ],1,name,'Currentpage').
struct_dt_elem_i([ 26,20,0 ],1,camelname,'CurrentPage').
struct_dt_elem_i([ 26,20,0 ],1,length,5).
struct_dt_elem_i([ 26,20,0 ],1,decimals,0).
struct_dt_elem_i([ 26,20,0 ],1,sign,0).
struct_dt_elem_i([ 26,20,0 ],1,type,[ 4,5,0 ]).
struct_dt_elem_i([ 26,20,0 ],1,pic,'ZZZZ9').
struct_dt_elem_i([ 26,20,0 ],1,collection,'False').
struct_dt_elem_i([ 26,20,0 ],1,'ExternalName','CurrentPage').
struct_dt_elem_i([ 26,20,0 ],1,'ExternalNamespace','Parksz').
struct_dt_elem_i([ 26,20,0 ],1,'XmlType','Element').
struct_dt_elem_i([ 26,20,0 ],1,'XmlName','').
struct_dt_elem_i([ 26,20,0 ],1,'XmlNamespace','').
struct_dt_elem_i([ 26,20,0 ],1,soaptype,'').
struct_dt_elem_i([ 26,20,0 ],1,'XmlInclude',idXmlIncludeAlways).
struct_dt_elem_i([ 26,20,0 ],1,'JsonName','').
struct_dt_elem_i([ 26,20,0 ],1,'JsonInclude',idJsonEmpty).
struct_dt_elem_i([ 26,20,0 ],2,name,'Orderedby').
struct_dt_elem_i([ 26,20,0 ],2,camelname,'OrderedBy').
struct_dt_elem_i([ 26,20,0 ],2,length,4).
struct_dt_elem_i([ 26,20,0 ],2,decimals,0).
struct_dt_elem_i([ 26,20,0 ],2,sign,0).
struct_dt_elem_i([ 26,20,0 ],2,type,[ 4,4,0 ]).
struct_dt_elem_i([ 26,20,0 ],2,pic,'ZZZ9').
struct_dt_elem_i([ 26,20,0 ],2,collection,'False').
struct_dt_elem_i([ 26,20,0 ],2,'ExternalName','OrderedBy').
struct_dt_elem_i([ 26,20,0 ],2,'ExternalNamespace','Parksz').
struct_dt_elem_i([ 26,20,0 ],2,'XmlType','Element').
struct_dt_elem_i([ 26,20,0 ],2,'XmlName','').
struct_dt_elem_i([ 26,20,0 ],2,'XmlNamespace','').
struct_dt_elem_i([ 26,20,0 ],2,soaptype,'').
struct_dt_elem_i([ 26,20,0 ],2,'XmlInclude',idXmlIncludeAlways).
struct_dt_elem_i([ 26,20,0 ],2,'JsonName','').
struct_dt_elem_i([ 26,20,0 ],2,'JsonInclude',idJsonEmpty).
struct_dt_elem_i([ 26,20,0 ],3,name,'Inputvalues').
struct_dt_elem_i([ 26,20,0 ],3,camelname,'InputValues').
struct_dt_elem_i([ 26,20,0 ],3,type,[ [ 26,20,39 ],0,0 ]).
struct_dt_elem_i([ 26,20,0 ],3,pic,'').
struct_dt_elem_i([ 26,20,0 ],3,collection,'True').
struct_dt_elem_i([ 26,20,0 ],3,'ObjName','InputValues').
struct_dt_elem_i([ 26,20,0 ],3,'ObjDesc','Input Values').
struct_dt_elem_i([ 26,20,0 ],3,'CollectionItemName','InputValuesItem').
struct_dt_elem_i([ 26,20,0 ],3,'XmlName','').
struct_dt_elem_i([ 26,20,0 ],3,'XmlCollectionItemName','').
struct_dt_elem_i([ 26,20,0 ],3,'XmlNamespace','').
struct_dt_elem_i([ 26,20,0 ],3,'CollectionSerialization',idXmlCollectionWrapped).
struct_dt_elem_i([ 26,20,0 ],3,'XmlInclude',idXmlIncludeAlways).
struct_dt_elem_i([ 26,20,0 ],3,'JsonName','').
struct_dt_elem_i([ 26,20,0 ],3,'JsonInclude',idJsonNoProperty).
struct_dt_elem_i([ 26,20,0 ],3,'JsonCollectionSerialization',idXmlCollectionWrapped).
struct_dt_elem_i([ 26,20,39 ],1,name,'Name').
struct_dt_elem_i([ 26,20,39 ],1,camelname,'Name').
struct_dt_elem_i([ 26,20,39 ],1,length,256).
struct_dt_elem_i([ 26,20,39 ],1,decimals,0).
struct_dt_elem_i([ 26,20,39 ],1,type,[ 13,256,0 ]).
struct_dt_elem_i([ 26,20,39 ],1,pic,'').
struct_dt_elem_i([ 26,20,39 ],1,collection,'False').
struct_dt_elem_i([ 26,20,39 ],1,'ExternalName','Name').
struct_dt_elem_i([ 26,20,39 ],1,'ExternalNamespace','Parksz').
struct_dt_elem_i([ 26,20,39 ],1,'XmlType','Element').
struct_dt_elem_i([ 26,20,39 ],1,'XmlName','').
struct_dt_elem_i([ 26,20,39 ],1,'XmlNamespace','').
struct_dt_elem_i([ 26,20,39 ],1,soaptype,'').
struct_dt_elem_i([ 26,20,39 ],1,'XmlInclude',idXmlIncludeAlways).
struct_dt_elem_i([ 26,20,39 ],1,'JsonName','').
struct_dt_elem_i([ 26,20,39 ],1,'JsonInclude',idJsonEmpty).
struct_dt_elem_i([ 26,20,39 ],2,name,'Value').
struct_dt_elem_i([ 26,20,39 ],2,camelname,'Value').
struct_dt_elem_i([ 26,20,39 ],2,length,256).
struct_dt_elem_i([ 26,20,39 ],2,decimals,0).
struct_dt_elem_i([ 26,20,39 ],2,type,[ 13,256,0 ]).
struct_dt_elem_i([ 26,20,39 ],2,pic,'').
struct_dt_elem_i([ 26,20,39 ],2,collection,'False').
struct_dt_elem_i([ 26,20,39 ],2,'ExternalName','Value').
struct_dt_elem_i([ 26,20,39 ],2,'ExternalNamespace','Parksz').
struct_dt_elem_i([ 26,20,39 ],2,'XmlType','Element').
struct_dt_elem_i([ 26,20,39 ],2,'XmlName','').
struct_dt_elem_i([ 26,20,39 ],2,'XmlNamespace','').
struct_dt_elem_i([ 26,20,39 ],2,soaptype,'').
struct_dt_elem_i([ 26,20,39 ],2,'XmlInclude',idXmlIncludeAlways).
struct_dt_elem_i([ 26,20,39 ],2,'JsonName','').
struct_dt_elem_i([ 26,20,39 ],2,'JsonInclude',idJsonEmpty).
struct_dt_elem_i([ 26,56,0 ],1,name,'Callerobject').
struct_dt_elem_i([ 26,56,0 ],1,camelname,'CallerObject').
struct_dt_elem_i([ 26,56,0 ],1,basedon,52).
struct_dt_elem_i([ 26,56,0 ],1,length,256).
struct_dt_elem_i([ 26,56,0 ],1,decimals,0).
struct_dt_elem_i([ 26,56,0 ],1,type,[ 13,256,0 ]).
struct_dt_elem_i([ 26,56,0 ],1,pic,'').
struct_dt_elem_i([ 26,56,0 ],1,collection,'False').
struct_dt_elem_i([ 26,56,0 ],1,'ExternalName','CallerObject').
struct_dt_elem_i([ 26,56,0 ],1,'ExternalNamespace','Parksz').
struct_dt_elem_i([ 26,56,0 ],1,'XmlType','Element').
struct_dt_elem_i([ 26,56,0 ],1,'XmlName','').
struct_dt_elem_i([ 26,56,0 ],1,'XmlNamespace','').
struct_dt_elem_i([ 26,56,0 ],1,soaptype,'').
struct_dt_elem_i([ 26,56,0 ],1,'XmlInclude',idXmlIncludeAlways).
struct_dt_elem_i([ 26,56,0 ],1,'JsonName','').
struct_dt_elem_i([ 26,56,0 ],1,'JsonInclude',idJsonEmpty).
struct_dt_elem_i([ 26,56,0 ],2,name,'Callerondelete').
struct_dt_elem_i([ 26,56,0 ],2,camelname,'CallerOnDelete').
struct_dt_elem_i([ 26,56,0 ],2,length,4).
struct_dt_elem_i([ 26,56,0 ],2,decimals,0).
struct_dt_elem_i([ 26,56,0 ],2,type,[ 15,4,0 ]).
struct_dt_elem_i([ 26,56,0 ],2,pic,'').
struct_dt_elem_i([ 26,56,0 ],2,collection,'False').
struct_dt_elem_i([ 26,56,0 ],2,'ExternalName','CallerOnDelete').
struct_dt_elem_i([ 26,56,0 ],2,'ExternalNamespace','Parksz').
struct_dt_elem_i([ 26,56,0 ],2,'XmlType','Element').
struct_dt_elem_i([ 26,56,0 ],2,'XmlName','').
struct_dt_elem_i([ 26,56,0 ],2,'XmlNamespace','').
struct_dt_elem_i([ 26,56,0 ],2,soaptype,'').
struct_dt_elem_i([ 26,56,0 ],2,'XmlInclude',idXmlIncludeAlways).
struct_dt_elem_i([ 26,56,0 ],2,'JsonName','').
struct_dt_elem_i([ 26,56,0 ],2,'JsonInclude',idJsonEmpty).
struct_dt_elem_i([ 26,56,0 ],3,name,'Callerurl').
struct_dt_elem_i([ 26,56,0 ],3,camelname,'CallerURL').
struct_dt_elem_i([ 26,56,0 ],3,basedon,31).
struct_dt_elem_i([ 26,56,0 ],3,length,1000).
struct_dt_elem_i([ 26,56,0 ],3,decimals,0).
struct_dt_elem_i([ 26,56,0 ],3,type,[ 13,1000,0 ]).
struct_dt_elem_i([ 26,56,0 ],3,pic,'').
struct_dt_elem_i([ 26,56,0 ],3,collection,'False').
struct_dt_elem_i([ 26,56,0 ],3,'ExternalName','CallerURL').
struct_dt_elem_i([ 26,56,0 ],3,'ExternalNamespace','Parksz').
struct_dt_elem_i([ 26,56,0 ],3,'XmlType','Element').
struct_dt_elem_i([ 26,56,0 ],3,'XmlName','').
struct_dt_elem_i([ 26,56,0 ],3,'XmlNamespace','').
struct_dt_elem_i([ 26,56,0 ],3,soaptype,'').
struct_dt_elem_i([ 26,56,0 ],3,'XmlInclude',idXmlIncludeAlways).
struct_dt_elem_i([ 26,56,0 ],3,'JsonName','').
struct_dt_elem_i([ 26,56,0 ],3,'JsonInclude',idJsonEmpty).
struct_dt_elem_i([ 26,56,0 ],4,name,'Transactionname').
struct_dt_elem_i([ 26,56,0 ],4,camelname,'TransactionName').
struct_dt_elem_i([ 26,56,0 ],4,basedon,52).
struct_dt_elem_i([ 26,56,0 ],4,length,256).
struct_dt_elem_i([ 26,56,0 ],4,decimals,0).
struct_dt_elem_i([ 26,56,0 ],4,type,[ 13,256,0 ]).
struct_dt_elem_i([ 26,56,0 ],4,pic,'').
struct_dt_elem_i([ 26,56,0 ],4,collection,'False').
struct_dt_elem_i([ 26,56,0 ],4,'ExternalName','TransactionName').
struct_dt_elem_i([ 26,56,0 ],4,'ExternalNamespace','Parksz').
struct_dt_elem_i([ 26,56,0 ],4,'XmlType','Element').
struct_dt_elem_i([ 26,56,0 ],4,'XmlName','').
struct_dt_elem_i([ 26,56,0 ],4,'XmlNamespace','').
struct_dt_elem_i([ 26,56,0 ],4,soaptype,'').
struct_dt_elem_i([ 26,56,0 ],4,'XmlInclude',idXmlIncludeAlways).
struct_dt_elem_i([ 26,56,0 ],4,'JsonName','').
struct_dt_elem_i([ 26,56,0 ],4,'JsonInclude',idJsonEmpty).
struct_dt_elem_i([ 26,56,0 ],5,name,'Attributes').
struct_dt_elem_i([ 26,56,0 ],5,camelname,'Attributes').
struct_dt_elem_i([ 26,56,0 ],5,type,[ [ 26,56,84 ],0,0 ]).
struct_dt_elem_i([ 26,56,0 ],5,pic,'').
struct_dt_elem_i([ 26,56,0 ],5,collection,'True').
struct_dt_elem_i([ 26,56,0 ],5,'ObjName','Attributes').
struct_dt_elem_i([ 26,56,0 ],5,'ObjDesc','Attributes').
struct_dt_elem_i([ 26,56,0 ],5,'CollectionItemName','Attribute').
struct_dt_elem_i([ 26,56,0 ],5,'XmlName','').
struct_dt_elem_i([ 26,56,0 ],5,'XmlCollectionItemName','').
struct_dt_elem_i([ 26,56,0 ],5,'XmlNamespace','').
struct_dt_elem_i([ 26,56,0 ],5,'CollectionSerialization',idXmlCollectionWrapped).
struct_dt_elem_i([ 26,56,0 ],5,'XmlInclude',idXmlIncludeAlways).
struct_dt_elem_i([ 26,56,0 ],5,'JsonName','').
struct_dt_elem_i([ 26,56,0 ],5,'JsonInclude',idJsonNoProperty).
struct_dt_elem_i([ 26,56,0 ],5,'JsonCollectionSerialization',idXmlCollectionWrapped).
struct_dt_elem_i([ 26,56,84 ],1,name,'Attributename').
struct_dt_elem_i([ 26,56,84 ],1,camelname,'AttributeName').
struct_dt_elem_i([ 26,56,84 ],1,length,128).
struct_dt_elem_i([ 26,56,84 ],1,decimals,0).
struct_dt_elem_i([ 26,56,84 ],1,type,[ 13,128,0 ]).
struct_dt_elem_i([ 26,56,84 ],1,pic,'').
struct_dt_elem_i([ 26,56,84 ],1,collection,'False').
struct_dt_elem_i([ 26,56,84 ],1,'ExternalName','AttributeName').
struct_dt_elem_i([ 26,56,84 ],1,'ExternalNamespace','Parksz').
struct_dt_elem_i([ 26,56,84 ],1,'XmlType','Element').
struct_dt_elem_i([ 26,56,84 ],1,'XmlName','').
struct_dt_elem_i([ 26,56,84 ],1,'XmlNamespace','').
struct_dt_elem_i([ 26,56,84 ],1,soaptype,'').
struct_dt_elem_i([ 26,56,84 ],1,'XmlInclude',idXmlIncludeAlways).
struct_dt_elem_i([ 26,56,84 ],1,'JsonName','').
struct_dt_elem_i([ 26,56,84 ],1,'JsonInclude',idJsonEmpty).
struct_dt_elem_i([ 26,56,84 ],2,name,'Attributevalue').
struct_dt_elem_i([ 26,56,84 ],2,camelname,'AttributeValue').
struct_dt_elem_i([ 26,56,84 ],2,length,1000).
struct_dt_elem_i([ 26,56,84 ],2,decimals,0).
struct_dt_elem_i([ 26,56,84 ],2,type,[ 13,1000,0 ]).
struct_dt_elem_i([ 26,56,84 ],2,pic,'').
struct_dt_elem_i([ 26,56,84 ],2,collection,'False').
struct_dt_elem_i([ 26,56,84 ],2,'ExternalName','AttributeValue').
struct_dt_elem_i([ 26,56,84 ],2,'ExternalNamespace','Parksz').
struct_dt_elem_i([ 26,56,84 ],2,'XmlType','Element').
struct_dt_elem_i([ 26,56,84 ],2,'XmlName','').
struct_dt_elem_i([ 26,56,84 ],2,'XmlNamespace','').
struct_dt_elem_i([ 26,56,84 ],2,soaptype,'').
struct_dt_elem_i([ 26,56,84 ],2,'XmlInclude',idXmlIncludeAlways).
struct_dt_elem_i([ 26,56,84 ],2,'JsonName','').
struct_dt_elem_i([ 26,56,84 ],2,'JsonInclude',idJsonEmpty).
struct_dt_elem_i([ 26,56,0 ],3,pic,'ZZ9').
 
 
 
 
 
sub_info_i(146,'Start',1,15,[ [ 'Pgmname',[ t('Httprequest',23),t('Querystring',3) ],[ t('Httprequest',23),t('Scriptname',3) ] ],[ [ t('Grid',3),t('Rows',3) ],'Update','Delete','Orderedby',[ t('Form',3),t('Caption',3) ],'Advanced_label_template' ] ]).
sub_info_i(146,'''Toggle''',17,31,[ [ [ t('Filterscontainer',3),t('Class',3) ] ],[ [ t('Filterscontainer',3),t('Class',3) ],[ t('Gridcell',3),t('Class',3) ],[ t('Btntoggle',3),t('Class',3) ],[ t('Btntoggle',3),t('Caption',3) ],[ t('Btntoggle',3),t('Tooltiptext',3) ] ] ]).
sub_info_i(146,[ t('Lblorderby',3,32,7),t('Click',3,32,18) ],32,38,[ [ [ t('Orderbycontainer',3),t('Class',3) ] ],[ [ t('Orderbycontainer',3),t('Class',3) ] ] ]).
sub_info_i(146,[ t('Orderby1',3,40,7),t('Click',3,40,16) ],40,45,[ [ ctrl('Grid','refresh(') ],[ 'Orderedby',[ t('Orderby1',3),t('Class',3) ],[ t('Orderby2',3),t('Class',3) ] ] ]).
sub_info_i(146,[ t('Orderby2',3,47,7),t('Click',3,47,16) ],47,52,[ [ ctrl('Grid','refresh(') ],[ 'Orderedby',[ t('Orderby1',3),t('Class',3) ],[ t('Orderby2',3),t('Class',3) ] ] ]).
sub_info_i(146,'Refresh',54,63,[ [ 'Orderedby','Advanced_label_template' ],[ [ t('Lblorderby',3),t('Caption',3) ] ] ]).
sub_info_i(146,[ t('Grid',3,65,7),t('Load',3,65,12) ],65,70,[ [ 7,12 ],[ [ t('Update',23),t('Link',3) ],[ t('Delete',23),t('Link',3) ],[ t(8,2),t('Link',3) ],[ t(13,2),t('Link',3) ] ] ]).
sub_info_i(146,'''DoInsert''',72,74,[ [ 7 ],[] ]).
 
pgm_parm_i(web,14,'NOTAUTHORIZED',[ [ svchar,256,0,0 ] ],[ [ 'GxObject',in,[] ] ]).
pgm_parm_i(web,16,'VIEWCOUNTRY',[ [ int,4,0,0 ],[ char,50,0,0 ] ],[ [ 'CountryId',in,[] ],[ 'TabCode',in,[] ] ]).
pgm_parm_i(web,20,'VIEWAMUSEMENTPARK',[ [ int,4,0,0 ],[ char,50,0,0 ] ],[ [ 'AmusementParkId',in,[] ],[ 'TabCode',in,[] ] ]).
pgm_parm_i(trn,2,'AMUSEMENTPARK',[ [ char,3,0,0 ],[ int,4,0,0 ] ],[ [ 'Mode',in,[] ],[ 'AmusementParkId',in,[] ] ]).
pgm_parm_i(proc,12,'ISAUTHORIZED',[ [ svchar,256,0,0 ],[ boolean,4,0,0 ] ],[ [ 'GxObject',in,[] ],[ 'Authorized',out,[] ] ]).
 
pgm_callprotocol_i(web,21,'WWAMUSEMENTPARK','INTERNAL','Secure').
pgm_callprotocol_i(web,14,'NOTAUTHORIZED','INTERNAL','Secure').
pgm_callprotocol_i(web,16,'VIEWCOUNTRY','INTERNAL','Secure').
pgm_callprotocol_i(web,20,'VIEWAMUSEMENTPARK','INTERNAL','Secure').
pgm_callprotocol_i(trn,2,'AMUSEMENTPARK','INTERNAL','Secure').
pgm_callprotocol_i(proc,12,'ISAUTHORIZED','INTERNAL','Secure').
 
 
 
 
module_info_i('GeneXus\Common','CSHARP_NAME_SPACE','GeneXus.Core').
module_info_i('GeneXus\Common','AssemblyName','GeneXus.dll').
module_info_i('GeneXus','CSHARP_NAME_SPACE','GeneXus.Core').
module_info_i('GeneXus','AssemblyName','GeneXus.dll').
 
 
 
 
 
 
 
 
 
 
